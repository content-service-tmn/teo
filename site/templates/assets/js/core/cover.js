!function(i){"use strict";i.component("cover",{defaults:{automute:!0},boot:function(){i.ready(function(t){i.$("[data-uk-cover]",t).each(function(){var t=i.$(this);if(!t.data("cover"))i.cover(t,i.Utils.options(t.attr("data-uk-cover")))})})},init:function(){if(this.parent=this.element.parent(),i.$win.on("load resize orientationchange",i.Utils.debounce(function(){this.check()}.bind(this),100)),this.on("display.uk.check",function(t){this.element.is(":visible")&&this.check()}.bind(this)),this.check(),this.element.is("iframe")&&this.options.automute){var t=this.element.attr("src");this.element.attr("src","").on("load",function(){this.contentWindow.postMessage('{ "event": "command", "func": "mute", "method":"setVolume", "value":0}',"*")}).attr("src",[t,-1<t.indexOf("?")?"&":"?","enablejsapi=1&api=1"].join(""))}},check:function(){this.element.css({width:"",height:""}),this.dimension={w:this.element.width(),h:this.element.height()},this.element.attr("width")&&!isNaN(this.element.attr("width"))&&(this.dimension.w=this.element.attr("width")),this.element.attr("height")&&!isNaN(this.element.attr("height"))&&(this.dimension.h=this.element.attr("height")),this.ratio=this.dimension.w/this.dimension.h;var t,i,e=this.parent.width(),n=this.parent.height();e/this.ratio<n?(t=Math.ceil(n*this.ratio),i=n):(t=e,i=Math.ceil(e/this.ratio)),this.element.css({width:t,height:i})}})}(UIkit2);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvY292ZXIuanMiXSwibmFtZXMiOlsiVUkiLCJjb21wb25lbnQiLCJkZWZhdWx0cyIsImF1dG9tdXRlIiwiYm9vdCIsInJlYWR5IiwiY29udGV4dCIsIiQiLCJlYWNoIiwiZWxlIiwidGhpcyIsImRhdGEiLCJjb3ZlciIsIlV0aWxzIiwib3B0aW9ucyIsImF0dHIiLCJpbml0IiwicGFyZW50IiwiZWxlbWVudCIsIiR3aW4iLCJvbiIsImRlYm91bmNlIiwiY2hlY2siLCJiaW5kIiwiZSIsImlzIiwic3JjIiwiY29udGVudFdpbmRvdyIsInBvc3RNZXNzYWdlIiwiaW5kZXhPZiIsImpvaW4iLCJjc3MiLCJ3aWR0aCIsImhlaWdodCIsImRpbWVuc2lvbiIsInciLCJoIiwiaXNOYU4iLCJyYXRpbyIsIk1hdGgiLCJjZWlsIiwiVUlraXQyIl0sIm1hcHBpbmdzIjoiQ0FDQSxTQUFVQSxHQUVOLGFBRUFBLEVBQUdDLFVBQVUsUUFBUyxDQUVsQkMsU0FBVSxDQUNOQyxVQUFXLEdBR2ZDLEtBQU0sV0FHRkosRUFBR0ssTUFBTSxTQUFTQyxHQUVkTixFQUFHTyxFQUFFLGtCQUFtQkQsR0FBU0UsS0FBSyxXQUVsQyxJQUFJQyxFQUFNVCxFQUFHTyxFQUFFRyxNQUVmLElBQUlELEVBQUlFLEtBQUssU0FDSVgsRUFBR1ksTUFBTUgsRUFBS1QsRUFBR2EsTUFBTUMsUUFBUUwsRUFBSU0sS0FBSyx3QkFNckVDLEtBQU0sV0FjRixHQVpBTixLQUFLTyxPQUFTUCxLQUFLUSxRQUFRRCxTQUUzQmpCLEVBQUdtQixLQUFLQyxHQUFHLGdDQUFpQ3BCLEVBQUdhLE1BQU1RLFNBQVMsV0FDMURYLEtBQUtZLFNBQ1BDLEtBQUtiLE1BQU8sTUFFZEEsS0FBS1UsR0FBRyxtQkFBb0IsU0FBU0ksR0FDN0JkLEtBQUtRLFFBQVFPLEdBQUcsYUFBYWYsS0FBS1ksU0FDeENDLEtBQUtiLE9BRVBBLEtBQUtZLFFBRURaLEtBQUtRLFFBQVFPLEdBQUcsV0FBYWYsS0FBS0ksUUFBUVgsU0FBVSxDQUVwRCxJQUFJdUIsRUFBTWhCLEtBQUtRLFFBQVFILEtBQUssT0FFNUJMLEtBQUtRLFFBQVFILEtBQUssTUFBTyxJQUFJSyxHQUFHLE9BQVEsV0FDcENWLEtBQUtpQixjQUFjQyxZQUFZLHlFQUEwRSxPQUMxR2IsS0FBSyxNQUFPLENBQUNXLEdBQTBCLEVBQXBCQSxFQUFJRyxRQUFRLEtBQVksSUFBSSxJQUFNLHVCQUF1QkMsS0FBSyxPQUk1RlIsTUFBTyxXQUVIWixLQUFLUSxRQUFRYSxJQUFJLENBQUVDLE1BQVMsR0FBSUMsT0FBUyxLQUV6Q3ZCLEtBQUt3QixVQUFZLENBQUNDLEVBQUd6QixLQUFLUSxRQUFRYyxRQUFTSSxFQUFHMUIsS0FBS1EsUUFBUWUsVUFFdkR2QixLQUFLUSxRQUFRSCxLQUFLLFdBQWFzQixNQUFNM0IsS0FBS1EsUUFBUUgsS0FBSyxZQUN2REwsS0FBS3dCLFVBQVVDLEVBQUl6QixLQUFLUSxRQUFRSCxLQUFLLFVBR3JDTCxLQUFLUSxRQUFRSCxLQUFLLFlBQWNzQixNQUFNM0IsS0FBS1EsUUFBUUgsS0FBSyxhQUN4REwsS0FBS3dCLFVBQVVFLEVBQUkxQixLQUFLUSxRQUFRSCxLQUFLLFdBR3pDTCxLQUFLNEIsTUFBUTVCLEtBQUt3QixVQUFVQyxFQUFJekIsS0FBS3dCLFVBQVVFLEVBRS9DLElBQXVESixFQUFPQyxFQUExREUsRUFBSXpCLEtBQUtPLE9BQU9lLFFBQVNJLEVBQUkxQixLQUFLTyxPQUFPZ0IsU0FHeENFLEVBQUl6QixLQUFLNEIsTUFBU0YsR0FFbkJKLEVBQVNPLEtBQUtDLEtBQUtKLEVBQUkxQixLQUFLNEIsT0FDNUJMLEVBQVNHLElBS1RKLEVBQVNHLEVBQ1RGLEVBQVNNLEtBQUtDLEtBQUtMLEVBQUl6QixLQUFLNEIsUUFHaEM1QixLQUFLUSxRQUFRYSxJQUFJLENBQUVDLE1BQVNBLEVBQU9DLE9BQVNBLE9BakZ4RCxDQXFGR1EiLCJmaWxlIjoiY29yZS9jb3Zlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBVSWtpdCAyLjI3LjIgfCBodHRwOi8vd3d3LmdldHVpa2l0LmNvbSB8IChjKSAyMDE0IFlPT3RoZW1lIHwgTUlUIExpY2Vuc2UgKi9cbihmdW5jdGlvbihVSSl7XG5cbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIFVJLmNvbXBvbmVudCgnY292ZXInLCB7XG5cbiAgICAgICAgZGVmYXVsdHM6IHtcbiAgICAgICAgICAgIGF1dG9tdXRlIDogdHJ1ZVxuICAgICAgICB9LFxuXG4gICAgICAgIGJvb3Q6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAvLyBhdXRvIGluaXRcbiAgICAgICAgICAgIFVJLnJlYWR5KGZ1bmN0aW9uKGNvbnRleHQpIHtcblxuICAgICAgICAgICAgICAgIFVJLiQoJ1tkYXRhLXVrLWNvdmVyXScsIGNvbnRleHQpLmVhY2goZnVuY3Rpb24oKXtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgZWxlID0gVUkuJCh0aGlzKTtcblxuICAgICAgICAgICAgICAgICAgICBpZighZWxlLmRhdGEoJ2NvdmVyJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwbHVnaW4gPSBVSS5jb3ZlcihlbGUsIFVJLlV0aWxzLm9wdGlvbnMoZWxlLmF0dHIoJ2RhdGEtdWstY292ZXInKSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcblxuICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgdGhpcy5wYXJlbnQgPSB0aGlzLmVsZW1lbnQucGFyZW50KCk7XG5cbiAgICAgICAgICAgIFVJLiR3aW4ub24oJ2xvYWQgcmVzaXplIG9yaWVudGF0aW9uY2hhbmdlJywgVUkuVXRpbHMuZGVib3VuY2UoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrKCk7XG4gICAgICAgICAgICB9LmJpbmQodGhpcyksIDEwMCkpO1xuXG4gICAgICAgICAgICB0aGlzLm9uKCdkaXNwbGF5LnVrLmNoZWNrJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmVsZW1lbnQuaXMoJzp2aXNpYmxlJykpIHRoaXMuY2hlY2soKTtcbiAgICAgICAgICAgIH0uYmluZCh0aGlzKSk7XG5cbiAgICAgICAgICAgIHRoaXMuY2hlY2soKTtcblxuICAgICAgICAgICAgaWYgKHRoaXMuZWxlbWVudC5pcygnaWZyYW1lJykgJiYgdGhpcy5vcHRpb25zLmF1dG9tdXRlKSB7XG5cbiAgICAgICAgICAgICAgICB2YXIgc3JjID0gdGhpcy5lbGVtZW50LmF0dHIoJ3NyYycpO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50LmF0dHIoJ3NyYycsICcnKS5vbignbG9hZCcsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGVudFdpbmRvdy5wb3N0TWVzc2FnZSgneyBcImV2ZW50XCI6IFwiY29tbWFuZFwiLCBcImZ1bmNcIjogXCJtdXRlXCIsIFwibWV0aG9kXCI6XCJzZXRWb2x1bWVcIiwgXCJ2YWx1ZVwiOjB9JywgJyonKTtcbiAgICAgICAgICAgICAgICB9KS5hdHRyKCdzcmMnLCBbc3JjLCAoc3JjLmluZGV4T2YoJz8nKSA+IC0xID8gJyYnOic/JyksICdlbmFibGVqc2FwaT0xJmFwaT0xJ10uam9pbignJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGNoZWNrOiBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgdGhpcy5lbGVtZW50LmNzcyh7IHdpZHRoICA6ICcnLCBoZWlnaHQgOiAnJyB9KTtcblxuICAgICAgICAgICAgdGhpcy5kaW1lbnNpb24gPSB7dzogdGhpcy5lbGVtZW50LndpZHRoKCksIGg6IHRoaXMuZWxlbWVudC5oZWlnaHQoKX07XG5cbiAgICAgICAgICAgIGlmICh0aGlzLmVsZW1lbnQuYXR0cignd2lkdGgnKSAmJiAhaXNOYU4odGhpcy5lbGVtZW50LmF0dHIoJ3dpZHRoJykpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kaW1lbnNpb24udyA9IHRoaXMuZWxlbWVudC5hdHRyKCd3aWR0aCcpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5lbGVtZW50LmF0dHIoJ2hlaWdodCcpICYmICFpc05hTih0aGlzLmVsZW1lbnQuYXR0cignaGVpZ2h0JykpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kaW1lbnNpb24uaCA9IHRoaXMuZWxlbWVudC5hdHRyKCdoZWlnaHQnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5yYXRpbyA9IHRoaXMuZGltZW5zaW9uLncgLyB0aGlzLmRpbWVuc2lvbi5oO1xuXG4gICAgICAgICAgICB2YXIgdyA9IHRoaXMucGFyZW50LndpZHRoKCksIGggPSB0aGlzLnBhcmVudC5oZWlnaHQoKSwgd2lkdGgsIGhlaWdodDtcblxuICAgICAgICAgICAgLy8gaWYgZWxlbWVudCBoZWlnaHQgPCBwYXJlbnQgaGVpZ2h0IChnYXAgdW5kZXJuZWF0aClcbiAgICAgICAgICAgIGlmICgodyAvIHRoaXMucmF0aW8pIDwgaCkge1xuXG4gICAgICAgICAgICAgICAgd2lkdGggID0gTWF0aC5jZWlsKGggKiB0aGlzLnJhdGlvKTtcbiAgICAgICAgICAgICAgICBoZWlnaHQgPSBoO1xuXG4gICAgICAgICAgICAvLyBlbGVtZW50IHdpZHRoIDwgcGFyZW50IHdpZHRoIChnYXAgdG8gcmlnaHQpXG4gICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgd2lkdGggID0gdztcbiAgICAgICAgICAgICAgICBoZWlnaHQgPSBNYXRoLmNlaWwodyAvIHRoaXMucmF0aW8pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQuY3NzKHsgd2lkdGggIDogd2lkdGgsIGhlaWdodCA6IGhlaWdodCB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG59KShVSWtpdDIpOyJdfQ==
