!function(r){"use strict";var o;function c(t,i,n){var e,s=r.$.Deferred(),a=t,o=t;return n[0]===i[0]?s.resolve():("object"==typeof t&&(a=t[0],o=t[1]||t[0]),r.$body.css("overflow-x","hidden"),e=function(){i&&i.hide().removeClass("uk-active "+o+" uk-animation-reverse"),n.addClass(a).one(r.support.animation.end,function(){setTimeout(function(){n.removeClass(""+a).css({opacity:"",display:""})},0),s.resolve(),r.$body.css("overflow-x",""),i&&i.css({opacity:"",display:""})}.bind(this)).show()},n.css("animation-duration",this.options.duration+"ms"),i&&i.length?(i.css("animation-duration",this.options.duration+"ms"),i.css("display","none").addClass(o+" uk-animation-reverse").one(r.support.animation.end,function(){e()}.bind(this)).css("display","")):(n.addClass("uk-active"),e())),s.promise()}r.component("switcher",{defaults:{connect:!1,toggle:">*",active:0,animation:!1,duration:200,swiping:!0},animating:!1,boot:function(){r.ready(function(t){r.$("[data-uk-switcher]",t).each(function(){var t=r.$(this);if(!t.data("switcher"))r.switcher(t,r.Utils.options(t.attr("data-uk-switcher")))})})},init:function(){var n=this;this.on("click.uk.switcher",this.options.toggle,function(t){t.preventDefault(),n.show(this)}),this.options.connect&&(this.connect=r.$(this.options.connect),this.connect.length&&(this.connect.on("click.uk.switcher","[data-uk-switcher-item]",function(t){t.preventDefault();var i=r.$(this).attr("data-uk-switcher-item");if(n.index!=i)switch(i){case"next":case"previous":n.show(n.index+("next"==i?1:-1));break;default:n.show(parseInt(i,10))}}),this.options.swiping&&this.connect.on("swipeRight swipeLeft",function(t){t.preventDefault(),window.getSelection().toString()||n.show(n.index+("swipeLeft"==t.type?1:-1))}),this.update()))},update:function(){this.connect.children().removeClass("uk-active").attr("aria-hidden","true");var t=this.find(this.options.toggle),i=t.filter(".uk-active");if(i.length)this.show(i,!1);else{if(!1===this.options.active)return;i=t.eq(this.options.active),this.show(i.length?i:t.eq(0),!1)}t.not(i).attr("aria-expanded","false"),i.attr("aria-expanded","true")},show:function(t,i){if(!this.animating){var n=this.find(this.options.toggle);isNaN(t)?t=r.$(t):(t=t<0?n.length-1:t,t=n.eq(n[t]?t:0));var s=this,e=r.$(t),a=o[this.options.animation]||function(t,i){if(!s.options.animation)return o.none.apply(s);var n=s.options.animation.split(",");return 1==n.length&&(n[1]=n[0]),n[0]=n[0].trim(),n[1]=n[1].trim(),c.apply(s,[n,t,i])};!1!==i&&r.support.animation||(a=o.none),e.hasClass("uk-disabled")||(n.attr("aria-expanded","false"),e.attr("aria-expanded","true"),n.filter(".uk-active").removeClass("uk-active"),e.addClass("uk-active"),this.options.connect&&this.connect.length&&(this.index=this.find(this.options.toggle).index(e),-1==this.index&&(this.index=0),this.connect.each(function(){var t=r.$(this),i=r.$(t.children()),n=r.$(i.filter(".uk-active")),e=r.$(i.eq(s.index));s.animating=!0,a.apply(s,[n,e]).then(function(){n.removeClass("uk-active"),e.addClass("uk-active"),n.attr("aria-hidden","true"),e.attr("aria-hidden","false"),r.Utils.checkDisplay(e,!0),s.animating=!1})})),this.trigger("show.uk.switcher",[e]))}}}),o={none:function(){var t=r.$.Deferred();return t.resolve(),t.promise()},fade:function(t,i){return c.apply(this,["uk-animation-fade",t,i])},"slide-bottom":function(t,i){return c.apply(this,["uk-animation-slide-bottom",t,i])},"slide-top":function(t,i){return c.apply(this,["uk-animation-slide-top",t,i])},"slide-vertical":function(t,i,n){var e=["uk-animation-slide-top","uk-animation-slide-bottom"];return t&&t.index()>i.index()&&e.reverse(),c.apply(this,[e,t,i])},"slide-left":function(t,i){return c.apply(this,["uk-animation-slide-left",t,i])},"slide-right":function(t,i){return c.apply(this,["uk-animation-slide-right",t,i])},"slide-horizontal":function(t,i,n){var e=["uk-animation-slide-right","uk-animation-slide-left"];return t&&t.index()>i.index()&&e.reverse(),c.apply(this,[e,t,i])},scale:function(t,i){return c.apply(this,["uk-animation-scale-up",t,i])}},r.switcher.animations=o}(UIkit2);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
