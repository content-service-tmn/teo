!function(t){var i;window.UIkit2&&(i=t(UIkit2)),"function"==typeof define&&define.amd&&define("uikit-tooltip",["uikit"],function(){return i||t(UIkit2)})}(function(u){"use strict";var m,v,g;return u.component("tooltip",{defaults:{offset:5,pos:"top",animation:!1,delay:0,cls:"",activeClass:"uk-active",src:function(t){var i=t.attr("title");return void 0!==i&&t.data("cached-title",i).removeAttr("title"),t.data("cached-title")}},tip:"",boot:function(){u.$html.on("mouseenter.tooltip.uikit focus.tooltip.uikit","[data-uk-tooltip]",function(t){var i=u.$(this);i.data("tooltip")||(u.tooltip(i,u.Utils.options(i.attr("data-uk-tooltip"))),i.trigger("mouseenter"))})},init:function(){var i=this;m||(m=u.$('<div class="uk-tooltip"></div>').appendTo("body")),this.on({focus:function(t){i.show()},blur:function(t){i.hide()},mouseenter:function(t){i.show()},mouseleave:function(t){i.hide()}})},show:function(){if(this.tip="function"==typeof this.options.src?this.options.src(this.element):this.options.src,v&&clearTimeout(v),g&&clearInterval(g),"string"==typeof this.tip&&this.tip.length){m.stop().css({top:-2e3,visibility:"hidden"}).removeClass(this.options.activeClass).show(),m.html('<div class="uk-tooltip-inner">'+this.tip+"</div>");var t=this,i=u.$.extend({},this.element.offset(),{width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}),o=m[0].offsetWidth,e=m[0].offsetHeight,s="function"==typeof this.options.offset?this.options.offset.call(this.element):this.options.offset,n="function"==typeof this.options.pos?this.options.pos.call(this.element):this.options.pos,l=n.split("-"),f={display:"none",visibility:"visible",top:i.top+i.height+e,left:i.left};if("fixed"==u.$html.css("position")||"fixed"==u.$body.css("position")){var a=u.$("body").offset(),p=u.$("html").offset(),h=p.top+a.top,c=p.left+a.left;i.left-=c,i.top-=h}"left"!=l[0]&&"right"!=l[0]||"right"!=u.langdirection||(l[0]="left"==l[0]?"right":"left");var r={bottom:{top:i.top+i.height+s,left:i.left+i.width/2-o/2},top:{top:i.top-e-s,left:i.left+i.width/2-o/2},left:{top:i.top+i.height/2-e/2,left:i.left-o-s},right:{top:i.top+i.height/2-e/2,left:i.left+i.width+s}};u.$.extend(f,r[l[0]]),2==l.length&&(f.left="left"==l[1]?i.left:i.left+i.width-o);var d=this.checkBoundary(f.left,f.top,o,e);if(d){switch(d){case"x":n=2==l.length?l[0]+"-"+(f.left<0?"left":"right"):f.left<0?"right":"left";break;case"y":n=2==l.length?(f.top<0?"bottom":"top")+"-"+l[1]:f.top<0?"bottom":"top";break;case"xy":n=2==l.length?(f.top<0?"bottom":"top")+"-"+(f.left<0?"left":"right"):f.left<0?"right":"left"}l=n.split("-"),u.$.extend(f,r[l[0]]),2==l.length&&(f.left="left"==l[1]?i.left:i.left+i.width-o)}f.left-=u.$body.position().left,v=setTimeout(function(){m.css(f).attr("class",["uk-tooltip","uk-tooltip-"+n,t.options.cls].join(" ")),t.options.animation?m.css({opacity:0,display:"block"}).addClass(t.options.activeClass).animate({opacity:1},parseInt(t.options.animation,10)||400):m.show().addClass(t.options.activeClass),v=!1,g=setInterval(function(){t.element.is(":visible")||t.hide()},150)},parseInt(this.options.delay,10)||0)}},hide:function(){if(!this.element.is("input")||this.element[0]!==document.activeElement)if(v&&clearTimeout(v),g&&clearInterval(g),m.stop(),this.options.animation){var t=this;m.fadeOut(parseInt(this.options.animation,10)||400,function(){m.removeClass(t.options.activeClass)})}else m.hide().removeClass(this.options.activeClass)},content:function(){return this.tip},checkBoundary:function(t,i,o,e){var s="";return(t<0||t-u.$win.scrollLeft()+o>window.innerWidth)&&(s+="x"),(i<0||i-u.$win.scrollTop()+e>window.innerHeight)&&(s+="y"),s}}),u.tooltip});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
