!function(e){var t;window.UIkit2&&(t=e(UIkit2)),"function"==typeof define&&define.amd&&define("uikit-parallax",["uikit"],function(){return t||e(UIkit2)})}(function(F){"use strict";var t=[],S=!1,i=0,n=window.innerHeight,e=function(){i=F.$win.scrollTop(),window.requestAnimationFrame(function(){for(var e=0;e<t.length;e++)t[e].process()})};F.component("parallax",{defaults:{velocity:.5,target:!1,viewport:!1,media:!1},boot:function(){S=function(){var e,t=document.createElement("div"),a={WebkitTransform:"-webkit-transform",MSTransform:"-ms-transform",MozTransform:"-moz-transform",Transform:"transform"};for(var r in document.body.insertBefore(t,null),a)void 0!==t.style[r]&&(t.style[r]="translate3d(1px,1px,1px)",e=window.getComputedStyle(t).getPropertyValue(a[r]));return document.body.removeChild(t),void 0!==e&&0<e.length&&"none"!==e}(),F.$doc.on("scrolling.uk.document",e),F.$win.on("load resize orientationchange",F.Utils.debounce(function(){n=window.innerHeight,e()},50)),F.ready(function(e){F.$("[data-uk-parallax]",e).each(function(){var e=F.$(this);e.data("parallax")||F.parallax(e,F.Utils.options(e.attr("data-uk-parallax")))})})},init:function(){this.base=this.options.target?F.$(this.options.target):this.element,this.props={},this.velocity=this.options.velocity||1;var s=["target","velocity","viewport","plugins","media"];Object.keys(this.options).forEach(function(e){if(-1===s.indexOf(e)){var t,a,r,i,n=String(this.options[e]).split(",");e.match(/color/i)?(t=n[1]?n[0]:this._getStartValue(e),a=n[1]?n[1]:n[0],t||(t="rgba(255,255,255,0)")):(i=(t=parseFloat(n[1]?n[0]:this._getStartValue(e)))<(a=parseFloat(n[1]?n[1]:n[0]))?a-t:t-a,r=t<a?1:-1),this.props[e]={start:t,end:a,dir:r,diff:i}}}.bind(this)),t.push(this)},process:function(){if(this.options.media)switch(typeof this.options.media){case"number":if(window.innerWidth<this.options.media)return!1;break;case"string":if(window.matchMedia&&!window.matchMedia(this.options.media).matches)return!1}var e=this.percentageInViewport();!1!==this.options.viewport&&(e=0===this.options.viewport?1:e/this.options.viewport),this.update(e)},percentageInViewport:function(){var e,t,a=this.base.offset().top,r=this.base.outerHeight();return i+n<a?t=0:a+r<i?t=1:a+r<n?t=(i<n?i:i-n)/(a+r):(e=i+n-a,t=Math.round(e/((n+r)/100))/100),t},update:function(v){var w,y,x={transform:"",filter:""},I=v*(1-(this.velocity-this.velocity*v));I<0&&(I=0),1<I&&(I=1),void 0!==this._percent&&this._percent==I||(Object.keys(this.props).forEach(function(e){var r,i,n,t,s,o,a,c,l,p,f,d,h,u,b,g,m,k;switch(w=this.props[e],0===v?y=w.start:1===v?y=w.end:void 0!==w.diff&&(y=w.start+w.diff*I*w.dir),"bg"!=e&&"bgp"!=e||this._bgcover||(this._bgcover=(r=this,i=e,n=w,f=new Image,s=r.element.css({backgroundSize:"cover",backgroundRepeat:"no-repeat"}),t=s.css("background-image").replace(/^url\(/g,"").replace(/\)$/g,"").replace(/("|')/g,""),a=function(){var e=s.innerWidth(),t=s.innerHeight(),a="bg"==i?n.diff:n.diff/100*t;if(t+=a,(e+=Math.ceil(a*c))-a<o.w&&t<o.h)return r.element.css({backgroundSize:"auto"});e/c<t?(l=Math.ceil(t*c),(p=t)>window.innerHeight&&(l*=1.2,p*=1.2)):(l=e,p=Math.ceil(e/c)),s.css({backgroundSize:l+"px "+p+"px"}).data("bgsize",{w:l,h:p})},f.onerror=function(){},f.onload=function(){o={w:f.width,h:f.height},c=f.width/f.height,F.$win.on("load resize orientationchange",F.Utils.debounce(function(){a()},50)),a()},f.src=t,!0)),e){case"x":x.transform+=S?" translate3d("+y+"px, 0, 0)":" translateX("+y+"px)";break;case"xp":x.transform+=S?" translate3d("+y+"%, 0, 0)":" translateX("+y+"%)";break;case"y":x.transform+=S?" translate3d(0, "+y+"px, 0)":" translateY("+y+"px)";break;case"yp":x.transform+=S?" translate3d(0, "+y+"%, 0)":" translateY("+y+"%)";break;case"rotate":x.transform+=" rotate("+y+"deg)";break;case"scale":x.transform+=" scale("+y+")";break;case"bg":x["background-position"]="50% "+y+"px";break;case"bgp":x["background-position"]="50% "+y+"%";break;case"color":case"background-color":case"border-color":x[e]=(d=w.start,h=w.end,u=I,d=z(d),h=z(h),b=d,g=h,m=u=u||0,k="rgba("+parseInt(b[0]+m*(g[0]-b[0]),10)+","+parseInt(b[1]+m*(g[1]-b[1]),10)+","+parseInt(b[2]+m*(g[2]-b[2]),10)+","+(b&&g?parseFloat(b[3]+m*(g[3]-b[3])):1),k+=")");break;case"blur":x.filter+=" blur("+y+"px)";break;case"hue":x.filter+=" hue-rotate("+y+"deg)";break;case"grayscale":x.filter+=" grayscale("+y+"%)";break;case"invert":x.filter+=" invert("+y+"%)";break;case"fopacity":x.filter+=" opacity("+y+"%)";break;case"saturate":x.filter+=" saturate("+y+"%)";break;case"sepia":x.filter+=" sepia("+y+"%)";break;default:x[e]=y}}.bind(this)),x.filter&&(x["-webkit-filter"]=x.filter),this.element.css(x),this._percent=I)},_getStartValue:function(e){var t=0;switch(e){case"scale":t=1;break;default:t=this.element.css(e)}return t||0}});var a={black:[0,0,0,1],blue:[0,0,255,1],brown:[165,42,42,1],cyan:[0,255,255,1],fuchsia:[255,0,255,1],gold:[255,215,0,1],green:[0,128,0,1],indigo:[75,0,130,1],khaki:[240,230,140,1],lime:[0,255,0,1],magenta:[255,0,255,1],maroon:[128,0,0,1],navy:[0,0,128,1],olive:[128,128,0,1],orange:[255,165,0,1],pink:[255,192,203,1],purple:[128,0,128,1],violet:[128,0,128,1],red:[255,0,0,1],silver:[192,192,192,1],white:[255,255,255,1],yellow:[255,255,0,1],transparent:[255,255,255,0]};function z(e){var t;return(t=/#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})/.exec(e))?[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16),1]:(t=/#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])/.exec(e))?[17*parseInt(t[1],16),17*parseInt(t[2],16),17*parseInt(t[3],16),1]:(t=/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(e))?[parseInt(t[1]),parseInt(t[2]),parseInt(t[3]),1]:(t=/rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9\.]*)\s*\)/.exec(e))?[parseInt(t[1],10),parseInt(t[2],10),parseInt(t[3],10),parseFloat(t[4])]:a[e]||[255,255,255,0]}return F.parallax});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
