!function(i){var t;window.UIkit2&&(t=i(UIkit2)),"function"==typeof define&&define.amd&&define("uikit-lightbox",["uikit"],function(){return t||i(UIkit2)})}(function(g){"use strict";var d,r={};return g.component("lightbox",{defaults:{allowfullscreen:!0,duration:400,group:!1,keyboard:!0},index:0,items:!1,boot:function(){g.$html.on("click","[data-uk-lightbox]",function(i){i.preventDefault();var t=g.$(this);t.data("lightbox")||g.lightbox(t,g.Utils.options(t.attr("data-uk-lightbox"))),t.data("lightbox").show(t)}),g.$doc.on("keyup",function(i){if(d&&d.is(":visible")&&d.lightbox.options.keyboard)switch(i.preventDefault(),i.keyCode){case 37:d.lightbox.previous();break;case 39:d.lightbox.next()}})},init:function(){var t=[];if(this.index=0,this.siblings=[],this.element&&this.element.length){var i=this.options.group?g.$('[data-uk-lightbox*="'+this.options.group+'"]'):this.element;i.each(function(){var i=g.$(this);t.push({source:i.attr("href"),title:i.attr("data-title")||i.attr("title"),type:i.attr("data-lightbox-type")||"auto",link:i})}),this.index=i.index(this.element),this.siblings=t}else this.options.group&&this.options.group.length&&(this.siblings=this.options.group);this.trigger("lightbox-init",[this])},show:function(e){this.modal=function(i){if(d)return d.lightbox=i,d;(d=g.$(['<div class="uk-modal">','<div class="uk-modal-dialog uk-modal-dialog-lightbox uk-slidenav-position" style="margin-left:auto;margin-right:auto;width:200px;height:200px;top:'+Math.abs(window.innerHeight/2-200)+'px;">','<a href="#" class="uk-modal-close uk-close uk-close-alt"></a>','<div class="uk-lightbox-content"></div>','<div class="uk-modal-spinner uk-hidden"></div>',"</div>","</div>"].join("")).appendTo("body")).dialog=d.find(".uk-modal-dialog:first"),d.content=d.find(".uk-lightbox-content:first"),d.loader=d.find(".uk-modal-spinner:first"),d.closer=d.find(".uk-close.uk-close-alt"),d.modal=g.modal(d,{modal:!1}),d.on("swipeRight swipeLeft",function(i){d.lightbox["swipeLeft"==i.type?"next":"previous"]()}).on("click","[data-lightbox-previous], [data-lightbox-next]",function(i){i.preventDefault(),d.lightbox[g.$(this).is("[data-lightbox-next]")?"next":"previous"]()}),d.on("hide.uk.modal",function(i){d.content.html("")});var t={w:window.innerWidth,h:window.innerHeight};return g.$win.on("load resize orientationchange",g.Utils.debounce(function(i){t.w!==window.innerWidth&&d.is(":visible")&&!g.Utils.isFullscreen()&&d.lightbox.fitSize(),t={w:window.innerWidth,h:window.innerHeight}},100)),d.lightbox=i,d}(this),this.modal.dialog.stop(),this.modal.content.stop();var i,t,o=this,n=g.$.Deferred();"object"==typeof(e=e||0)&&this.siblings.forEach(function(i,t){e[0]===i.link[0]&&(e=t)}),e<0?e=this.siblings.length-e:this.siblings[e]||(e=0),t=this.siblings[e],i={lightbox:o,source:t.source,type:t.type,index:e,promise:n,title:t.title,item:t,meta:{content:"",width:null,height:null}},this.index=e,this.modal.content.empty(),this.modal.is(":visible")||(this.modal.content.css({width:"",height:""}).empty(),this.modal.modal.show()),this.modal.loader.removeClass("uk-hidden"),n.promise().done(function(){o.data=i,o.fitSize(i)}).fail(function(){i.meta.content='<div class="uk-position-cover uk-flex uk-flex-middle uk-flex-center"><strong>Loading resource failed!</strong></div>',i.meta.width=400,i.meta.height=300,o.data=i,o.fitSize(i)}),o.trigger("showitem.uk.lightbox",[i])},fitSize:function(){var i=this,t=this.data,e=this.modal.dialog.outerWidth()-this.modal.dialog.width(),o=parseInt(this.modal.dialog.css("margin-top"),10)+parseInt(this.modal.dialog.css("margin-bottom"),10),n=t.meta.content,s=i.options.duration;1<this.siblings.length&&(n=[n,'<a href="#" class="uk-slidenav uk-slidenav-contrast uk-slidenav-previous uk-hidden-touch" data-lightbox-previous></a>','<a href="#" class="uk-slidenav uk-slidenav-contrast uk-slidenav-next uk-hidden-touch" data-lightbox-next></a>'].join(""));var h,a,l=g.$("<div>&nbsp;</div>").css({opacity:0,position:"absolute",top:0,left:0,width:"100%",maxWidth:i.modal.dialog.css("max-width"),padding:i.modal.dialog.css("padding"),margin:i.modal.dialog.css("margin")}),d=t.meta.width,r=t.meta.height;l.appendTo("body").width(),h=l.width(),a=window.innerHeight-o,l.remove(),this.modal.dialog.find(".uk-modal-caption").remove(),t.title&&(this.modal.dialog.append('<div class="uk-modal-caption">'+t.title+"</div>"),a-=this.modal.dialog.find(".uk-modal-caption").outerHeight()),h<t.meta.width&&(r=Math.floor(r*(h/d)),d=h),a<r&&(r=Math.floor(a),d=Math.ceil(t.meta.width*(a/t.meta.height))),this.modal.content.css("opacity",0).width(d).html(n),"iframe"==t.type&&this.modal.content.find("iframe:first").height(r);var u=r+e,c=Math.floor(window.innerHeight/2-u/2)-o;c<0&&(c=0),this.modal.closer.addClass("uk-hidden"),i.modal.data("mwidth")==d&&i.modal.data("mheight")==r&&(s=0),this.modal.dialog.animate({width:d+e,height:r+e,top:c},s,"swing",function(){i.modal.loader.addClass("uk-hidden"),i.modal.content.css({width:""}).animate({opacity:1},function(){i.modal.closer.removeClass("uk-hidden")}),i.modal.data({mwidth:d,mheight:r})})},next:function(){this.show(this.siblings[this.index+1]?this.index+1:0)},previous:function(){this.show(this.siblings[this.index-1]?this.index-1:this.siblings.length-1)}}),g.plugin("lightbox","image",{init:function(i){i.on("showitem.uk.lightbox",function(i,o){if("image"==o.type||o.source&&o.source.match(/\.(jpg|jpeg|png|gif|svg)$/i)){var t=function(i,t,e){o.meta={content:'<img class="uk-responsive-width" width="'+t+'" height="'+e+'" src ="'+i+'">',width:t,height:e},o.type="image",o.promise.resolve()};if(r[o.source])t(o.source,r[o.source].width,r[o.source].height);else{var e=new Image;e.onerror=function(){o.promise.reject("Loading image failed")},e.onload=function(){r[o.source]={width:e.width,height:e.height},t(o.source,r[o.source].width,r[o.source].height)},e.src=o.source}}})}}),g.plugin("lightbox","youtube",{init:function(i){var a=/(\/\/.*?youtube\.[a-z]+)\/watch\?v=([^&]+)&?(.*)/,l=/youtu\.be\/(.*)/;i.on("showitem.uk.lightbox",function(i,o){var t,e,n=function(i,t,e){o.meta={content:'<iframe src="//www.youtube.com/embed/'+i+'" width="'+t+'" height="'+e+'" style="max-width:100%;"'+(d.lightbox.options.allowfullscreen?" allowfullscreen":"")+"></iframe>",width:t,height:e},o.type="iframe",o.promise.resolve()};if((e=o.source.match(a))&&(t=e[2]),(e=o.source.match(l))&&(t=e[1]),t){if(r[t])n(t,r[t].width,r[t].height);else{var s=new Image,h=!1;s.onerror=function(){r[t]={width:640,height:320},n(t,r[t].width,r[t].height)},s.onload=function(){120==s.width&&90==s.height?h?(r[t]={width:640,height:320},n(t,r[t].width,r[t].height)):(h=!0,s.src="//img.youtube.com/vi/"+t+"/0.jpg"):(r[t]={width:s.width,height:s.height},n(t,s.width,s.height))},s.src="//img.youtube.com/vi/"+t+"/maxresdefault.jpg"}i.stopImmediatePropagation()}})}}),g.plugin("lightbox","vimeo",{init:function(i){var n,s=/(\/\/.*?)vimeo\.[a-z]+\/([0-9]+).*?/;i.on("showitem.uk.lightbox",function(i,o){var t,e=function(i,t,e){o.meta={content:'<iframe src="//player.vimeo.com/video/'+i+'" width="'+t+'" height="'+e+'" style="width:100%;box-sizing:border-box;"'+(d.lightbox.options.allowfullscreen?" allowfullscreen":"")+"></iframe>",width:t,height:e},o.type="iframe",o.promise.resolve()};(n=o.source.match(s))&&(t=n[2],r[t]?e(t,r[t].width,r[t].height):g.$.ajax({type:"GET",url:"//vimeo.com/api/oembed.json?url="+encodeURI(o.source),jsonp:"callback",dataType:"jsonp",success:function(i){r[t]={width:i.width,height:i.height},e(t,r[t].width,r[t].height)}}),i.stopImmediatePropagation())})}}),g.plugin("lightbox","video",{init:function(i){i.on("showitem.uk.lightbox",function(i,o){var t=function(i,t,e){o.meta={content:'<video class="uk-responsive-width" src="'+i+'" width="'+t+'" height="'+e+'" controls></video>',width:t,height:e},o.type="video",o.promise.resolve()};if("video"==o.type||o.source.match(/\.(mp4|webm|ogv)$/i))if(r[o.source])t(o.source,r[o.source].width,r[o.source].height);else var e=g.$('<video style="position:fixed;visibility:hidden;top:-10000px;"></video>').attr("src",o.source).appendTo("body"),n=setInterval(function(){e[0].videoWidth&&(clearInterval(n),r[o.source]={width:e[0].videoWidth,height:e[0].videoHeight},t(o.source,r[o.source].width,r[o.source].height),e.remove())},20)})}}),g.plugin("lightbox","iframe",{init:function(s){s.on("showitem.uk.lightbox",function(i,t){var e,o,n;("iframe"===t.type||t.source.match(/\.(html|php)$/))&&(e=t.source,o=s.options.width||800,n=s.options.height||600,t.meta={content:'<iframe class="uk-responsive-width" src="'+e+'" width="'+o+'" height="'+n+'"'+(d.lightbox.options.allowfullscreen?" allowfullscreen":"")+"></iframe>",width:o,height:n},t.type="iframe",t.promise.resolve())})}}),g.lightbox.create=function(i,t){if(i){var e=[];return i.forEach(function(i){e.push(g.$.extend({source:"",title:"",type:"auto",link:!1},"string"==typeof i?{source:i}:i))}),g.lightbox(g.$.extend({},t,{group:e}))}},g.lightbox});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
