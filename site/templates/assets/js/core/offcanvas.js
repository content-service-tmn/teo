!function(r){"use strict";var f={x:window.scrollX,y:window.scrollY},c=(r.$win,r.$doc,r.$html),o={show:function(a,t){if((a=r.$(a)).length){t=r.$.extend({mode:"push"},t);var n=r.$("body"),i=a.find(".uk-offcanvas-bar:first"),o="right"==r.langdirection,e=(i.hasClass("uk-offcanvas-bar-flip")?-1:1)*(o?-1:1),s=window.innerWidth-n.width();f={x:window.pageXOffset,y:window.pageYOffset},i.attr("mode",t.mode),a.addClass("uk-active"),n.css({width:window.innerWidth-s,height:window.innerHeight}).addClass("uk-offcanvas-page"),"push"!=t.mode&&"reveal"!=t.mode||n.css(o?"margin-right":"margin-left",(o?-1:1)*(i.outerWidth()*e)),"reveal"==t.mode&&i.css("clip","rect(0, "+i.outerWidth()+"px, 100vh, 0)"),c.css("margin-top",-1*f.y).width(),i.addClass("uk-offcanvas-bar-show"),this._initElement(a),i.trigger("show.uk.offcanvas",[a,i]),a.attr("aria-hidden","false")}},hide:function(a){var t=r.$("body"),n=r.$(".uk-offcanvas.uk-active"),i="right"==r.langdirection,o=n.find(".uk-offcanvas-bar:first"),e=function(){t.removeClass("uk-offcanvas-page").css({width:"",height:"",marginLeft:"",marginRight:""}),n.removeClass("uk-active"),o.removeClass("uk-offcanvas-bar-show"),c.css("margin-top",""),window.scrollTo(f.x,f.y),o.trigger("hide.uk.offcanvas",[n,o]),n.attr("aria-hidden","true")};n.length&&("none"==o.attr("mode")&&(a=!0),r.support.transition&&!a?(t.one(r.support.transition.end,function(){e()}).css(i?"margin-right":"margin-left",""),"reveal"==o.attr("mode")&&o.css("clip",""),setTimeout(function(){o.removeClass("uk-offcanvas-bar-show")},0)):e())},_initElement:function(a){a.data("OffcanvasInit")||(a.on("click.uk.offcanvas swipeRight.uk.offcanvas swipeLeft.uk.offcanvas",function(a){var t=r.$(a.target);if(!a.type.match(/swipe/)&&!t.hasClass("uk-offcanvas-close")){if(t.hasClass("uk-offcanvas-bar"))return;if(t.parents(".uk-offcanvas-bar:first").length)return}a.stopImmediatePropagation(),o.hide()}),a.on("click",'a[href*="#"]',function(a){var n=r.$(this),i=n.attr("href");"#"!=i&&(r.$doc.one("hide.uk.offcanvas",function(){var t;try{t=r.$(n[0].hash)}catch(a){t=""}t.length||(t=r.$('[name="'+n[0].hash.replace("#","")+'"]')),t.length&&r.Utils.scrollToElement?r.Utils.scrollToElement(t,r.Utils.options(n.attr("data-uk-smooth-scroll")||"{}")):window.location.href=i}),o.hide())}),a.data("OffcanvasInit",!0))}};r.component("offcanvasTrigger",{boot:function(){c.on("click.offcanvas.uikit","[data-uk-offcanvas]",function(a){a.preventDefault();var t=r.$(this);if(!t.data("offcanvasTrigger")){r.offcanvasTrigger(t,r.Utils.options(t.attr("data-uk-offcanvas")));t.trigger("click")}}),c.on("keydown.uk.offcanvas",function(a){27===a.keyCode&&o.hide()})},init:function(){var t=this;this.options=r.$.extend({target:!!t.element.is("a")&&t.element.attr("href"),mode:"push"},this.options),this.on("click",function(a){a.preventDefault(),o.show(t.options.target,t.options)})}}),r.offcanvas=o}(UIkit2);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
