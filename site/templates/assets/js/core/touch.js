!function(a){if(!a.fn.swipeLeft){var l,p,u,g,c,s={};a(function(){var t,n,i,o=0,r=0;"MSGesture"in window&&((c=new MSGesture).target=document.body),a(document).on("MSGestureEnd gestureend",function(e){var t=1<e.originalEvent.velocityX?"Right":e.originalEvent.velocityX<-1?"Left":1<e.originalEvent.velocityY?"Down":e.originalEvent.velocityY<-1?"Up":null;t&&void 0!==s.el&&(s.el.trigger("swipe"),s.el.trigger("swipe"+t))}).on("touchstart MSPointerDown pointerdown",function(e){("MSPointerDown"!=e.type||d(e.originalEvent))&&(i="MSPointerDown"==e.type||"pointerdown"==e.type?e:e.originalEvent.touches[0],t=Date.now(),n=t-(s.last||t),s.el=a("tagName"in i.target?i.target:i.target.parentNode),l&&clearTimeout(l),s.x1=i.pageX,s.y1=i.pageY,0<n&&n<=250&&(s.isDoubleTap=!0),s.last=t,g=setTimeout(v,750),e.originalEvent&&e.originalEvent.pointerId&&c&&("MSPointerDown"==e.type||"pointerdown"==e.type||"touchstart"==e.type)&&c.addPointer(e.originalEvent.pointerId))}).on("touchmove MSPointerMove pointermove",function(e){("MSPointerMove"!=e.type||d(e.originalEvent))&&(i="MSPointerMove"==e.type||"pointermove"==e.type?e:e.originalEvent.touches[0],y(),s.x2=i.pageX,s.y2=i.pageY,o+=Math.abs(s.x1-s.x2),r+=Math.abs(s.y1-s.y2))}).on("touchend MSPointerUp pointerup",function(e){("MSPointerUp"!=e.type||d(e.originalEvent))&&(y(),s.x2&&30<Math.abs(s.x1-s.x2)||s.y2&&30<Math.abs(s.y1-s.y2)?u=setTimeout(function(){var e,t,n,i;void 0!==s.el&&(s.el.trigger("swipe"),s.el.trigger("swipe"+(e=s.x1,t=s.x2,n=s.y1,i=s.y2,Math.abs(e-t)>=Math.abs(n-i)?0<e-t?"Left":"Right":0<n-i?"Up":"Down"))),s={}},0):"last"in s&&(isNaN(o)||o<30&&r<30?p=setTimeout(function(){var e=a.Event("tap");e.cancelTouch=w,void 0!==s.el&&s.el.trigger(e),s.isDoubleTap?(void 0!==s.el&&s.el.trigger("doubleTap"),s={}):l=setTimeout(function(){l=null,void 0!==s.el&&s.el.trigger("singleTap"),s={}},250)},0):s={},o=r=0))}).on("touchcancel MSPointerCancel pointercancel",w),a(window).on("scroll",w)}),["swipe","swipeLeft","swipeRight","swipeUp","swipeDown","doubleTap","tap","singleTap","longTap"].forEach(function(t){a.fn[t]=function(e){return a(this).on(t,e)}})}function v(){g=null,s.last&&(void 0!==s.el&&s.el.trigger("longTap"),s={})}function y(){g&&clearTimeout(g),g=null}function w(){l&&clearTimeout(l),p&&clearTimeout(p),u&&clearTimeout(u),g&&clearTimeout(g),l=p=u=g=null,s={}}function d(e){return e.pointerType==e.MSPOINTER_TYPE_TOUCH&&e.isPrimary}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
