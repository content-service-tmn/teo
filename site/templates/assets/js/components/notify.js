!function(t){var e;window.UIkit2&&(e=t(UIkit2)),"function"==typeof define&&define.amd&&define("uikit-notify",["uikit"],function(){return e||t(UIkit2)})}(function(e){"use strict";var s={},o={},t=function(t){return"string"==e.$.type(t)&&(t={message:t}),arguments[1]&&(t=e.$.extend(t,"string"==e.$.type(arguments[1])?{status:arguments[1]}:arguments[1])),new i(t).show()},i=function(t){this.options=e.$.extend({},i.defaults,t),this.uuid=e.Utils.uid("notifymsg"),this.element=e.$(['<div class="uk-notify-message">','<a class="uk-close"></a>',"<div></div>","</div>"].join("")).data("notifyMessage",this),this.content(this.options.message),this.options.status&&(this.element.addClass("uk-notify-message-"+this.options.status),this.currentstatus=this.options.status),this.group=this.options.group,o[this.uuid]=this,s[this.options.pos]||(s[this.options.pos]=e.$('<div class="uk-notify uk-notify-'+this.options.pos+'"></div>').appendTo("body").on("click",".uk-notify-message",function(){var t=e.$(this).data("notifyMessage");t.element.trigger("manualclose.uk.notify",[t]),t.close()}))};return e.$.extend(i.prototype,{uuid:!1,element:!1,timout:!1,currentstatus:"",group:!1,show:function(){if(!this.element.is(":visible")){var e=this;s[this.options.pos].show().prepend(this.element);var t=parseInt(this.element.css("margin-bottom"),10);return this.element.css({opacity:0,marginTop:-1*this.element.outerHeight(),marginBottom:0}).animate({opacity:1,marginTop:0,marginBottom:t},function(){if(e.options.timeout){var t=function(){e.close()};e.timeout=setTimeout(t,e.options.timeout),e.element.hover(function(){clearTimeout(e.timeout)},function(){e.timeout=setTimeout(t,e.options.timeout)})}}),this}},close:function(t){var e=this,i=function(){e.element.remove(),s[e.options.pos].children().length||s[e.options.pos].hide(),e.options.onClose.apply(e,[]),e.element.trigger("close.uk.notify",[e]),delete o[e.uuid]};this.timeout&&clearTimeout(this.timeout),t?i():this.element.animate({opacity:0,marginTop:-1*this.element.outerHeight(),marginBottom:0},function(){i()})},content:function(t){var e=this.element.find(">div");return t?(e.html(t),this):e.html()},status:function(t){return t?(this.element.removeClass("uk-notify-message-"+this.currentstatus).addClass("uk-notify-message-"+t),this.currentstatus=t,this):this.currentstatus}}),i.defaults={message:"",status:"",timeout:5e3,group:null,pos:"top-center",onClose:function(){}},e.notify=t,e.notify.message=i,e.notify.closeAll=function(t,e){var i;if(t)for(i in o)t===o[i].group&&o[i].close(e);else for(i in o)o[i].close(e)},t});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
