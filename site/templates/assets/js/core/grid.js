!function(n){"use strict";var s=[];n.component("gridMatchHeight",{defaults:{target:!1,row:!0,ignorestacked:!1,observe:!1},boot:function(){n.ready(function(t){n.$("[data-uk-grid-match]",t).each(function(){var t=n.$(this);t.data("gridMatchHeight")||n.gridMatchHeight(t,n.Utils.options(t.attr("data-uk-grid-match")))})})},init:function(){var t,i=this;(this.columns=this.element.children(),this.elements=this.options.target?this.find(this.options.target):this.columns,this.columns.length)&&(n.$win.on("load resize orientationchange",(t=function(){i.element.is(":visible")&&i.match()},n.$(function(){t()}),n.Utils.debounce(t,50))),this.options.observe&&n.domObserve(this.element,function(t){i.element.is(":visible")&&i.match()}),this.on("display.uk.check",function(t){this.element.is(":visible")&&this.match()}.bind(this)),s.push(this))},match:function(){var t=this.columns.filter(":visible:first");if(t.length)return 100<=Math.ceil(100*parseFloat(t.css("width"))/parseFloat(t.parent().css("width")))&&!this.options.ignorestacked?this.revert():n.Utils.matchHeights(this.elements,this.options),this},revert:function(){return this.elements.css("min-height",""),this}}),n.component("gridMargin",{defaults:{cls:"uk-grid-margin",rowfirst:"uk-row-first"},boot:function(){n.ready(function(t){n.$("[data-uk-grid-margin]",t).each(function(){var t=n.$(this);t.data("gridMargin")||n.gridMargin(t,n.Utils.options(t.attr("data-uk-grid-margin")))})})},init:function(){n.stackMargin(this.element,this.options)}})}(UIkit2);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvZ3JpZC5qcyJdLCJuYW1lcyI6WyJVSSIsImdyaWRzIiwiY29tcG9uZW50IiwiZGVmYXVsdHMiLCJ0YXJnZXQiLCJyb3ciLCJpZ25vcmVzdGFja2VkIiwib2JzZXJ2ZSIsImJvb3QiLCJyZWFkeSIsImNvbnRleHQiLCIkIiwiZWFjaCIsImdyaWQiLCJ0aGlzIiwiZGF0YSIsImdyaWRNYXRjaEhlaWdodCIsIlV0aWxzIiwib3B0aW9ucyIsImF0dHIiLCJpbml0IiwiZm4iLCIkdGhpcyIsImNvbHVtbnMiLCJlbGVtZW50IiwiY2hpbGRyZW4iLCJlbGVtZW50cyIsImZpbmQiLCJsZW5ndGgiLCIkd2luIiwib24iLCJpcyIsIm1hdGNoIiwiZGVib3VuY2UiLCJkb21PYnNlcnZlIiwiZSIsImJpbmQiLCJwdXNoIiwiZmlyc3R2aXNpYmxlIiwiZmlsdGVyIiwiTWF0aCIsImNlaWwiLCJwYXJzZUZsb2F0IiwiY3NzIiwicGFyZW50IiwicmV2ZXJ0IiwibWF0Y2hIZWlnaHRzIiwiY2xzIiwicm93Zmlyc3QiLCJncmlkTWFyZ2luIiwic3RhY2tNYXJnaW4iLCJVSWtpdDIiXSwibWFwcGluZ3MiOiJDQUNBLFNBQVVBLEdBRU4sYUFFQSxJQUFJQyxFQUFRLEdBRVpELEVBQUdFLFVBQVUsa0JBQW1CLENBRTVCQyxTQUFVLENBQ05DLFFBQWdCLEVBQ2hCQyxLQUFnQixFQUNoQkMsZUFBZ0IsRUFDaEJDLFNBQWdCLEdBR3BCQyxLQUFNLFdBR0ZSLEVBQUdTLE1BQU0sU0FBU0MsR0FFZFYsRUFBR1csRUFBRSx1QkFBd0JELEdBQVNFLEtBQUssV0FDdkMsSUFBSUMsRUFBT2IsRUFBR1csRUFBRUcsTUFFWEQsRUFBS0UsS0FBSyxvQkFDTGYsRUFBR2dCLGdCQUFnQkgsRUFBTWIsRUFBR2lCLE1BQU1DLFFBQVFMLEVBQUtNLEtBQUssNkJBTTFFQyxLQUFNLFdBRUYsSUFTUUMsRUFUSkMsRUFBUVIsTUFFWkEsS0FBS1MsUUFBV1QsS0FBS1UsUUFBUUMsV0FDN0JYLEtBQUtZLFNBQVdaLEtBQUtJLFFBQVFkLE9BQVNVLEtBQUthLEtBQUtiLEtBQUtJLFFBQVFkLFFBQVVVLEtBQUtTLFFBRXZFVCxLQUFLUyxRQUFRSyxVQUVsQjVCLEVBQUc2QixLQUFLQyxHQUFHLGlDQUVIVCxFQUFLLFdBQ0RDLEVBQU1FLFFBQVFPLEdBQUcsYUFBYVQsRUFBTVUsU0FHNUNoQyxFQUFHVyxFQUFFLFdBQWFVLE1BRVhyQixFQUFHaUIsTUFBTWdCLFNBQVNaLEVBQUksTUFHN0JQLEtBQUtJLFFBQVFYLFNBRWJQLEVBQUdrQyxXQUFXcEIsS0FBS1UsUUFBUyxTQUFTVyxHQUM3QmIsRUFBTUUsUUFBUU8sR0FBRyxhQUFhVCxFQUFNVSxVQUloRGxCLEtBQUtnQixHQUFHLG1CQUFvQixTQUFTSyxHQUM5QnJCLEtBQUtVLFFBQVFPLEdBQUcsYUFBYWpCLEtBQUtrQixTQUN2Q0ksS0FBS3RCLE9BRVBiLEVBQU1vQyxLQUFLdkIsUUFHZmtCLE1BQU8sV0FFSCxJQUFJTSxFQUFleEIsS0FBS1MsUUFBUWdCLE9BQU8sa0JBRXZDLEdBQUtELEVBQWFWLE9BVWxCLE9BUnlILEtBQTNHWSxLQUFLQyxLQUFLLElBQU1DLFdBQVdKLEVBQWFLLElBQUksVUFBWUQsV0FBV0osRUFBYU0sU0FBU0QsSUFBSSxhQUUzRjdCLEtBQUtJLFFBQVFaLGNBQ3pCUSxLQUFLK0IsU0FFTDdDLEVBQUdpQixNQUFNNkIsYUFBYWhDLEtBQUtZLFNBQVVaLEtBQUtJLFNBR3ZDSixNQUdYK0IsT0FBUSxXQUVKLE9BREEvQixLQUFLWSxTQUFTaUIsSUFBSSxhQUFjLElBQ3pCN0IsUUFJZmQsRUFBR0UsVUFBVSxhQUFjLENBRXZCQyxTQUFVLENBQ040QyxJQUFXLGlCQUNYQyxTQUFXLGdCQUdmeEMsS0FBTSxXQUdGUixFQUFHUyxNQUFNLFNBQVNDLEdBRWRWLEVBQUdXLEVBQUUsd0JBQXlCRCxHQUFTRSxLQUFLLFdBQ3hDLElBQUlDLEVBQU9iLEVBQUdXLEVBQUVHLE1BRVhELEVBQUtFLEtBQUssZUFDTGYsRUFBR2lELFdBQVdwQyxFQUFNYixFQUFHaUIsTUFBTUMsUUFBUUwsRUFBS00sS0FBSyw4QkFNckVDLEtBQU0sV0FFZ0JwQixFQUFHa0QsWUFBWXBDLEtBQUtVLFFBQVNWLEtBQUtJLFlBL0doRSxDQW1IR2lDIiwiZmlsZSI6ImNvcmUvZ3JpZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBVSWtpdCAyLjI3LjIgfCBodHRwOi8vd3d3LmdldHVpa2l0LmNvbSB8IChjKSAyMDE0IFlPT3RoZW1lIHwgTUlUIExpY2Vuc2UgKi9cbihmdW5jdGlvbihVSSkge1xuXG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICB2YXIgZ3JpZHMgPSBbXTtcblxuICAgIFVJLmNvbXBvbmVudCgnZ3JpZE1hdGNoSGVpZ2h0Jywge1xuXG4gICAgICAgIGRlZmF1bHRzOiB7XG4gICAgICAgICAgICB0YXJnZXQgICAgICAgIDogZmFsc2UsXG4gICAgICAgICAgICByb3cgICAgICAgICAgIDogdHJ1ZSxcbiAgICAgICAgICAgIGlnbm9yZXN0YWNrZWQgOiBmYWxzZSxcbiAgICAgICAgICAgIG9ic2VydmUgICAgICAgOiBmYWxzZVxuICAgICAgICB9LFxuXG4gICAgICAgIGJvb3Q6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAvLyBpbml0IGNvZGVcbiAgICAgICAgICAgIFVJLnJlYWR5KGZ1bmN0aW9uKGNvbnRleHQpIHtcblxuICAgICAgICAgICAgICAgIFVJLiQoJ1tkYXRhLXVrLWdyaWQtbWF0Y2hdJywgY29udGV4dCkuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGdyaWQgPSBVSS4kKHRoaXMpLCBvYmo7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFncmlkLmRhdGEoJ2dyaWRNYXRjaEhlaWdodCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYmogPSBVSS5ncmlkTWF0Y2hIZWlnaHQoZ3JpZCwgVUkuVXRpbHMub3B0aW9ucyhncmlkLmF0dHIoJ2RhdGEtdWstZ3JpZC1tYXRjaCcpKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICB2YXIgJHRoaXMgPSB0aGlzO1xuXG4gICAgICAgICAgICB0aGlzLmNvbHVtbnMgID0gdGhpcy5lbGVtZW50LmNoaWxkcmVuKCk7XG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzID0gdGhpcy5vcHRpb25zLnRhcmdldCA/IHRoaXMuZmluZCh0aGlzLm9wdGlvbnMudGFyZ2V0KSA6IHRoaXMuY29sdW1ucztcblxuICAgICAgICAgICAgaWYgKCF0aGlzLmNvbHVtbnMubGVuZ3RoKSByZXR1cm47XG5cbiAgICAgICAgICAgIFVJLiR3aW4ub24oJ2xvYWQgcmVzaXplIG9yaWVudGF0aW9uY2hhbmdlJywgKGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgdmFyIGZuID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgkdGhpcy5lbGVtZW50LmlzKCc6dmlzaWJsZScpKSAkdGhpcy5tYXRjaCgpO1xuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBVSS4kKGZ1bmN0aW9uKCkgeyBmbigpOyB9KTtcblxuICAgICAgICAgICAgICAgIHJldHVybiBVSS5VdGlscy5kZWJvdW5jZShmbiwgNTApO1xuICAgICAgICAgICAgfSkoKSk7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMub2JzZXJ2ZSkge1xuXG4gICAgICAgICAgICAgICAgVUkuZG9tT2JzZXJ2ZSh0aGlzLmVsZW1lbnQsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCR0aGlzLmVsZW1lbnQuaXMoJzp2aXNpYmxlJykpICR0aGlzLm1hdGNoKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMub24oJ2Rpc3BsYXkudWsuY2hlY2snLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgaWYodGhpcy5lbGVtZW50LmlzKCc6dmlzaWJsZScpKSB0aGlzLm1hdGNoKCk7XG4gICAgICAgICAgICB9LmJpbmQodGhpcykpO1xuXG4gICAgICAgICAgICBncmlkcy5wdXNoKHRoaXMpO1xuICAgICAgICB9LFxuXG4gICAgICAgIG1hdGNoOiBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgdmFyIGZpcnN0dmlzaWJsZSA9IHRoaXMuY29sdW1ucy5maWx0ZXIoJzp2aXNpYmxlOmZpcnN0Jyk7XG5cbiAgICAgICAgICAgIGlmICghZmlyc3R2aXNpYmxlLmxlbmd0aCkgcmV0dXJuO1xuXG4gICAgICAgICAgICB2YXIgc3RhY2tlZCA9IE1hdGguY2VpbCgxMDAgKiBwYXJzZUZsb2F0KGZpcnN0dmlzaWJsZS5jc3MoJ3dpZHRoJykpIC8gcGFyc2VGbG9hdChmaXJzdHZpc2libGUucGFyZW50KCkuY3NzKCd3aWR0aCcpKSkgPj0gMTAwO1xuXG4gICAgICAgICAgICBpZiAoc3RhY2tlZCAmJiAhdGhpcy5vcHRpb25zLmlnbm9yZXN0YWNrZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJldmVydCgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBVSS5VdGlscy5tYXRjaEhlaWdodHModGhpcy5lbGVtZW50cywgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmV2ZXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudHMuY3NzKCdtaW4taGVpZ2h0JywgJycpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIFVJLmNvbXBvbmVudCgnZ3JpZE1hcmdpbicsIHtcblxuICAgICAgICBkZWZhdWx0czoge1xuICAgICAgICAgICAgY2xzICAgICAgOiAndWstZ3JpZC1tYXJnaW4nLFxuICAgICAgICAgICAgcm93Zmlyc3QgOiAndWstcm93LWZpcnN0J1xuICAgICAgICB9LFxuXG4gICAgICAgIGJvb3Q6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAvLyBpbml0IGNvZGVcbiAgICAgICAgICAgIFVJLnJlYWR5KGZ1bmN0aW9uKGNvbnRleHQpIHtcblxuICAgICAgICAgICAgICAgIFVJLiQoJ1tkYXRhLXVrLWdyaWQtbWFyZ2luXScsIGNvbnRleHQpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBncmlkID0gVUkuJCh0aGlzKSwgb2JqO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICghZ3JpZC5kYXRhKCdncmlkTWFyZ2luJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9iaiA9IFVJLmdyaWRNYXJnaW4oZ3JpZCwgVUkuVXRpbHMub3B0aW9ucyhncmlkLmF0dHIoJ2RhdGEtdWstZ3JpZC1tYXJnaW4nKSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcblxuICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgdmFyIHN0YWNrTWFyZ2luID0gVUkuc3RhY2tNYXJnaW4odGhpcy5lbGVtZW50LCB0aGlzLm9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgfSk7XG5cbn0pKFVJa2l0Mik7Il19
