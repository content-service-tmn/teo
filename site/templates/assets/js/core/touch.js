!function(a){if(!a.fn.swipeLeft){var l,p,u,g,c,s={};a(function(){var t,n,i,o=0,r=0;"MSGesture"in window&&((c=new MSGesture).target=document.body),a(document).on("MSGestureEnd gestureend",function(e){var t=1<e.originalEvent.velocityX?"Right":e.originalEvent.velocityX<-1?"Left":1<e.originalEvent.velocityY?"Down":e.originalEvent.velocityY<-1?"Up":null;t&&void 0!==s.el&&(s.el.trigger("swipe"),s.el.trigger("swipe"+t))}).on("touchstart MSPointerDown pointerdown",function(e){("MSPointerDown"!=e.type||d(e.originalEvent))&&(i="MSPointerDown"==e.type||"pointerdown"==e.type?e:e.originalEvent.touches[0],t=Date.now(),n=t-(s.last||t),s.el=a("tagName"in i.target?i.target:i.target.parentNode),l&&clearTimeout(l),s.x1=i.pageX,s.y1=i.pageY,0<n&&n<=250&&(s.isDoubleTap=!0),s.last=t,g=setTimeout(v,750),e.originalEvent&&e.originalEvent.pointerId&&c&&("MSPointerDown"==e.type||"pointerdown"==e.type||"touchstart"==e.type)&&c.addPointer(e.originalEvent.pointerId))}).on("touchmove MSPointerMove pointermove",function(e){("MSPointerMove"!=e.type||d(e.originalEvent))&&(i="MSPointerMove"==e.type||"pointermove"==e.type?e:e.originalEvent.touches[0],y(),s.x2=i.pageX,s.y2=i.pageY,o+=Math.abs(s.x1-s.x2),r+=Math.abs(s.y1-s.y2))}).on("touchend MSPointerUp pointerup",function(e){("MSPointerUp"!=e.type||d(e.originalEvent))&&(y(),s.x2&&30<Math.abs(s.x1-s.x2)||s.y2&&30<Math.abs(s.y1-s.y2)?u=setTimeout(function(){var e,t,n,i;void 0!==s.el&&(s.el.trigger("swipe"),s.el.trigger("swipe"+(e=s.x1,t=s.x2,n=s.y1,i=s.y2,Math.abs(e-t)>=Math.abs(n-i)?0<e-t?"Left":"Right":0<n-i?"Up":"Down"))),s={}},0):"last"in s&&(isNaN(o)||o<30&&r<30?p=setTimeout(function(){var e=a.Event("tap");e.cancelTouch=w,void 0!==s.el&&s.el.trigger(e),s.isDoubleTap?(void 0!==s.el&&s.el.trigger("doubleTap"),s={}):l=setTimeout(function(){l=null,void 0!==s.el&&s.el.trigger("singleTap"),s={}},250)},0):s={},o=r=0))}).on("touchcancel MSPointerCancel pointercancel",w),a(window).on("scroll",w)}),["swipe","swipeLeft","swipeRight","swipeUp","swipeDown","doubleTap","tap","singleTap","longTap"].forEach(function(t){a.fn[t]=function(e){return a(this).on(t,e)}})}function v(){g=null,s.last&&(void 0!==s.el&&s.el.trigger("longTap"),s={})}function y(){g&&clearTimeout(g),g=null}function w(){l&&clearTimeout(l),p&&clearTimeout(p),u&&clearTimeout(u),g&&clearTimeout(g),l=p=u=g=null,s={}}function d(e){return e.pointerType==e.MSPOINTER_TYPE_TOUCH&&e.isPrimary}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvdG91Y2guanMiXSwibmFtZXMiOlsiJCIsImZuIiwic3dpcGVMZWZ0IiwidG91Y2hUaW1lb3V0IiwidGFwVGltZW91dCIsInN3aXBlVGltZW91dCIsImxvbmdUYXBUaW1lb3V0IiwiZ2VzdHVyZSIsInRvdWNoIiwibm93IiwiZGVsdGEiLCJmaXJzdFRvdWNoIiwiZGVsdGFYIiwiZGVsdGFZIiwid2luZG93IiwiTVNHZXN0dXJlIiwidGFyZ2V0IiwiZG9jdW1lbnQiLCJib2R5Iiwib24iLCJlIiwic3dpcGVEaXJlY3Rpb25Gcm9tVmVsb2NpdHkiLCJvcmlnaW5hbEV2ZW50IiwidmVsb2NpdHlYIiwidmVsb2NpdHlZIiwidW5kZWZpbmVkIiwiZWwiLCJ0cmlnZ2VyIiwidHlwZSIsImlzUHJpbWFyeVRvdWNoIiwidG91Y2hlcyIsIkRhdGUiLCJsYXN0IiwicGFyZW50Tm9kZSIsImNsZWFyVGltZW91dCIsIngxIiwicGFnZVgiLCJ5MSIsInBhZ2VZIiwiaXNEb3VibGVUYXAiLCJzZXRUaW1lb3V0IiwibG9uZ1RhcCIsInBvaW50ZXJJZCIsImFkZFBvaW50ZXIiLCJjYW5jZWxMb25nVGFwIiwieDIiLCJ5MiIsIk1hdGgiLCJhYnMiLCJpc05hTiIsImV2ZW50IiwiRXZlbnQiLCJjYW5jZWxUb3VjaCIsImNhbmNlbEFsbCIsImZvckVhY2giLCJldmVudE5hbWUiLCJjYWxsYmFjayIsInRoaXMiLCJwb2ludGVyVHlwZSIsIk1TUE9JTlRFUl9UWVBFX1RPVUNIIiwiaXNQcmltYXJ5IiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiQ0FLQyxTQUFVQSxHQUVULElBQUlBLEVBQUVDLEdBQUdDLFVBQVQsQ0FLQSxJQUFnQkMsRUFBY0MsRUFBWUMsRUFBY0MsRUFBb0NDLEVBQXhGQyxFQUFRLEdBZ0NaUixFQUFFLFdBQ0EsSUFBSVMsRUFBS0MsRUFBK0JDLEVBQXhCQyxFQUFTLEVBQUdDLEVBQVMsRUFFakMsY0FBZUMsVUFDakJQLEVBQVUsSUFBSVEsV0FDTkMsT0FBU0Ms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QUFNa0IsSUFBbUJsQixFQUFNa0IsR0FBR0MsUUFBUXVCLEdBRzNDMUMsRUFBTStCLGtCQUNVZCxJQUFiakIsRUFBTWtCLElBQW1CbEIsRUFBTWtCLEdBQUdDLFFBQVEsYUFDL0NuQixFQUFRLElBS1JMLEVBQWVxQyxXQUFXLFdBQ3hCckMsRUFBZSxVQUNHc0IsSUFBYmpCLEVBQU1rQixJQUFtQmxCLEVBQU1rQixHQUFHQyxRQUFRLGFBQy9DbkIsRUFBUSxJQUNQLE1BRUosR0FFSEEsRUFBUSxHQUVWSSxFQUFTQyxFQUFTLE1BTXJCTSxHQUFHLDRDQUE2Q2tDLEdBSW5EckQsRUFBRWMsUUFBUUssR0FBRyxTQUFVa0MsS0FHekIsQ0FBQyxRQUFTLFlBQWEsYUFBYyxVQUFXLFlBQWEsWUFBYSxNQUFPLFlBQWEsV0FBV0MsUUFBUSxTQUFTQyxHQUN4SHZELEVBQUVDLEdBQUdzRCxHQUFhLFNBQVNDLEdBQVcsT0FBT3hELEVBQUV5RCxNQUFNdEMsR0FBR29DLEVBQVdDLE1BMUpyRSxTQUFTZixJQUNQbkMsRUFBaUIsS0FDYkUsRUFBTXdCLFlBQ1VQLElBQWJqQixFQUFNa0IsSUFBbUJsQixFQUFNa0IsR0FBR0MsUUFBUSxXQUMvQ25CLEVBQVEsSUFJWixTQUFTb0MsSUFDSHRDLEdBQWdCNEIsYUFBYTVCLEdBQ2pDQSxFQUFpQixLQUduQixTQUFTK0MsSUFDSGxELEdBQWdCK0IsYUFBYS9CLEdBQzdCQyxHQUFnQjhCLGFBQWE5QixHQUM3QkMsR0FBZ0I2QixhQUFhN0IsR0FDN0JDLEdBQWdCNEIsYUFBYTVCLEdBQ2pDSCxFQUFlQyxFQUFhQyxFQUFlQyxFQUFpQixLQUM1REUsRUFBUSxHQUdWLFNBQVNxQixFQUFlcUIsR0FDdEIsT0FBT0EsRUFBTVEsYUFBZVIsRUFBTVMsc0JBQXdCVCxFQUFNVSxXQXBDbkUsQ0F5S0VDIiwiZmlsZSI6ImNvcmUvdG91Y2guanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgVUlraXQgMi4yNy4yIHwgaHR0cDovL3d3dy5nZXR1aWtpdC5jb20gfCAoYykgMjAxNCBZT090aGVtZSB8IE1JVCBMaWNlbnNlICovXHJcbi8vICBCYXNlZCBvbiBaZXB0b3MgdG91Y2guanNcclxuLy8gIGh0dHBzOi8vcmF3LmdpdGh1Yi5jb20vbWFkcm9iYnkvemVwdG8vbWFzdGVyL3NyYy90b3VjaC5qc1xyXG4vLyAgWmVwdG8uanMgbWF5IGJlIGZyZWVseSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXHJcblxyXG47KGZ1bmN0aW9uKCQpe1xyXG5cclxuICBpZiAoJC5mbi5zd2lwZUxlZnQpIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG5cclxuICB2YXIgdG91Y2ggPSB7fSwgdG91Y2hUaW1lb3V0LCB0YXBUaW1lb3V0LCBzd2lwZVRpbWVvdXQsIGxvbmdUYXBUaW1lb3V0LCBsb25nVGFwRGVsYXkgPSA3NTAsIGdlc3R1cmU7XHJcblxyXG4gIGZ1bmN0aW9uIHN3aXBlRGlyZWN0aW9uKHgxLCB4MiwgeTEsIHkyKSB7XHJcbiAgICByZXR1cm4gTWF0aC5hYnMoeDEgLSB4MikgPj0gTWF0aC5hYnMoeTEgLSB5MikgPyAoeDEgLSB4MiA+IDAgPyAnTGVmdCcgOiAnUmlnaHQnKSA6ICh5MSAtIHkyID4gMCA/ICdVcCcgOiAnRG93bicpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gbG9uZ1RhcCgpIHtcclxuICAgIGxvbmdUYXBUaW1lb3V0ID0gbnVsbDtcclxuICAgIGlmICh0b3VjaC5sYXN0KSB7XHJcbiAgICAgIGlmICggdG91Y2guZWwgIT09IHVuZGVmaW5lZCApIHRvdWNoLmVsLnRyaWdnZXIoJ2xvbmdUYXAnKTtcclxuICAgICAgdG91Y2ggPSB7fTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNhbmNlbExvbmdUYXAoKSB7XHJcbiAgICBpZiAobG9uZ1RhcFRpbWVvdXQpIGNsZWFyVGltZW91dChsb25nVGFwVGltZW91dCk7XHJcbiAgICBsb25nVGFwVGltZW91dCA9IG51bGw7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBjYW5jZWxBbGwoKSB7XHJcbiAgICBpZiAodG91Y2hUaW1lb3V0KSAgIGNsZWFyVGltZW91dCh0b3VjaFRpbWVvdXQpO1xyXG4gICAgaWYgKHRhcFRpbWVvdXQpICAgICBjbGVhclRpbWVvdXQodGFwVGltZW91dCk7XHJcbiAgICBpZiAoc3dpcGVUaW1lb3V0KSAgIGNsZWFyVGltZW91dChzd2lwZVRpbWVvdXQpO1xyXG4gICAgaWYgKGxvbmdUYXBUaW1lb3V0KSBjbGVhclRpbWVvdXQobG9uZ1RhcFRpbWVvdXQpO1xyXG4gICAgdG91Y2hUaW1lb3V0ID0gdGFwVGltZW91dCA9IHN3aXBlVGltZW91dCA9IGxvbmdUYXBUaW1lb3V0ID0gbnVsbDtcclxuICAgIHRvdWNoID0ge307XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBpc1ByaW1hcnlUb3VjaChldmVudCl7XHJcbiAgICByZXR1cm4gZXZlbnQucG9pbnRlclR5cGUgPT0gZXZlbnQuTVNQT0lOVEVSX1RZUEVfVE9VQ0ggJiYgZXZlbnQuaXNQcmltYXJ5O1xyXG4gIH1cclxuXHJcbiAgJChmdW5jdGlvbigpe1xyXG4gICAgdmFyIG5vdywgZGVsdGEsIGRlbHRhWCA9IDAsIGRlbHRhWSA9IDAsIGZpcnN0VG91Y2g7XHJcblxyXG4gICAgaWYgKCdNU0dlc3R1cmUnIGluIHdpbmRvdykge1xyXG4gICAgICBnZXN0dXJlID0gbmV3IE1TR2VzdHVyZSgpO1xyXG4gICAgICBnZXN0dXJlLnRhcmdldCA9IGRvY3VtZW50LmJvZHk7XHJcbiAgICB9XHJcblxyXG4gICAgJChkb2N1bWVudClcclxuICAgICAgLm9uKCdNU0dlc3R1cmVFbmQgZ2VzdHVyZWVuZCcsIGZ1bmN0aW9uKGUpe1xyXG5cclxuICAgICAgICB2YXIgc3dpcGVEaXJlY3Rpb25Gcm9tVmVsb2NpdHkgPSBlLm9yaWdpbmFsRXZlbnQudmVsb2NpdHlYID4gMSA/ICdSaWdodCcgOiBlLm9yaWdpbmFsRXZlbnQudmVsb2NpdHlYIDwgLTEgPyAnTGVmdCcgOiBlLm9yaWdpbmFsRXZlbnQudmVsb2NpdHlZID4gMSA/ICdEb3duJyA6IGUub3JpZ2luYWxFdmVudC52ZWxvY2l0eVkgPCAtMSA/ICdVcCcgOiBudWxsO1xyXG5cclxuICAgICAgICBpZiAoc3dpcGVEaXJlY3Rpb25Gcm9tVmVsb2NpdHkgJiYgdG91Y2guZWwgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgdG91Y2guZWwudHJpZ2dlcignc3dpcGUnKTtcclxuICAgICAgICAgIHRvdWNoLmVsLnRyaWdnZXIoJ3N3aXBlJysgc3dpcGVEaXJlY3Rpb25Gcm9tVmVsb2NpdHkpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgICAgLy8gTVNQb2ludGVyRG93bjogZm9yIElFMTBcclxuICAgICAgLy8gcG9pbnRlcmRvd246IGZvciBJRTExXHJcbiAgICAgIC5vbigndG91Y2hzdGFydCBNU1BvaW50ZXJEb3duIHBvaW50ZXJkb3duJywgZnVuY3Rpb24oZSl7XHJcblxyXG4gICAgICAgIGlmKGUudHlwZSA9PSAnTVNQb2ludGVyRG93bicgJiYgIWlzUHJpbWFyeVRvdWNoKGUub3JpZ2luYWxFdmVudCkpIHJldHVybjtcclxuXHJcbiAgICAgICAgZmlyc3RUb3VjaCA9IChlLnR5cGUgPT0gJ01TUG9pbnRlckRvd24nIHx8IGUudHlwZSA9PSAncG9pbnRlcmRvd24nKSA/IGUgOiBlLm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXTtcclxuXHJcbiAgICAgICAgbm93ICAgICAgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgIGRlbHRhICAgID0gbm93IC0gKHRvdWNoLmxhc3QgfHwgbm93KTtcclxuICAgICAgICB0b3VjaC5lbCA9ICQoJ3RhZ05hbWUnIGluIGZpcnN0VG91Y2gudGFyZ2V0ID8gZmlyc3RUb3VjaC50YXJnZXQgOiBmaXJzdFRvdWNoLnRhcmdldC5wYXJlbnROb2RlKTtcclxuXHJcbiAgICAgICAgaWYodG91Y2hUaW1lb3V0KSBjbGVhclRpbWVvdXQodG91Y2hUaW1lb3V0KTtcclxuXHJcbiAgICAgICAgdG91Y2gueDEgPSBmaXJzdFRvdWNoLnBhZ2VYO1xyXG4gICAgICAgIHRvdWNoLnkxID0gZmlyc3RUb3VjaC5wYWdlWTtcclxuXHJcbiAgICAgICAgaWYgKGRlbHRhID4gMCAmJiBkZWx0YSA8PSAyNTApIHRvdWNoLmlzRG91YmxlVGFwID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgdG91Y2gubGFzdCA9IG5vdztcclxuICAgICAgICBsb25nVGFwVGltZW91dCA9IHNldFRpbWVvdXQobG9uZ1RhcCwgbG9uZ1RhcERlbGF5KTtcclxuXHJcbiAgICAgICAgLy8gYWRkcyB0aGUgY3VycmVudCB0b3VjaCBjb250YWN0IGZvciBJRSBnZXN0dXJlIHJlY29nbml0aW9uXHJcbiAgICAgICAgaWYgKGUub3JpZ2luYWxFdmVudCAmJiBlLm9yaWdpbmFsRXZlbnQucG9pbnRlcklkICYmIGdlc3R1cmUgJiYgKCBlLnR5cGUgPT0gJ01TUG9pbnRlckRvd24nIHx8IGUudHlwZSA9PSAncG9pbnRlcmRvd24nIHx8IGUudHlwZSA9PSAndG91Y2hzdGFydCcgKSApIHtcclxuICAgICAgICAgIGdlc3R1cmUuYWRkUG9pbnRlcihlLm9yaWdpbmFsRXZlbnQucG9pbnRlcklkKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICB9KVxyXG4gICAgICAvLyBNU1BvaW50ZXJNb3ZlOiBmb3IgSUUxMFxyXG4gICAgICAvLyBwb2ludGVybW92ZTogZm9yIElFMTFcclxuICAgICAgLm9uKCd0b3VjaG1vdmUgTVNQb2ludGVyTW92ZSBwb2ludGVybW92ZScsIGZ1bmN0aW9uKGUpe1xyXG5cclxuICAgICAgICBpZiAoZS50eXBlID09ICdNU1BvaW50ZXJNb3ZlJyAmJiAhaXNQcmltYXJ5VG91Y2goZS5vcmlnaW5hbEV2ZW50KSkgcmV0dXJuO1xyXG5cclxuICAgICAgICBmaXJzdFRvdWNoID0gKGUudHlwZSA9PSAnTVNQb2ludGVyTW92ZScgfHwgZS50eXBlID09ICdwb2ludGVybW92ZScpID8gZSA6IGUub3JpZ2luYWxFdmVudC50b3VjaGVzWzBdO1xyXG5cclxuICAgICAgICBjYW5jZWxMb25nVGFwKCk7XHJcbiAgICAgICAgdG91Y2gueDIgPSBmaXJzdFRvdWNoLnBhZ2VYO1xyXG4gICAgICAgIHRvdWNoLnkyID0gZmlyc3RUb3VjaC5wYWdlWTtcclxuXHJcbiAgICAgICAgZGVsdGFYICs9IE1hdGguYWJzKHRvdWNoLngxIC0gdG91Y2gueDIpO1xyXG4gICAgICAgIGRlbHRhWSArPSBNYXRoLmFicyh0b3VjaC55MSAtIHRvdWNoLnkyKTtcclxuICAgICAgfSlcclxuICAgICAgLy8gTVNQb2ludGVyVXA6IGZvciBJRTEwXHJcbiAgICAgIC8vIHBvaW50ZXJ1cDogZm9yIElFMTFcclxuICAgICAgLm9uKCd0b3VjaGVuZCBNU1BvaW50ZXJVcCBwb2ludGVydXAnLCBmdW5jdGlvbihlKXtcclxuXHJcbiAgICAgICAgaWYgKGUudHlwZSA9PSAnTVNQb2ludGVyVXAnICYmICFpc1ByaW1hcnlUb3VjaChlLm9yaWdpbmFsRXZlbnQpKSByZXR1cm47XHJcblxyXG4gICAgICAgIGNhbmNlbExvbmdUYXAoKTtcclxuXHJcbiAgICAgICAgLy8gc3dpcGVcclxuICAgICAgICBpZiAoKHRvdWNoLngyICYmIE1hdGguYWJzKHRvdWNoLngxIC0gdG91Y2gueDIpID4gMzApIHx8ICh0b3VjaC55MiAmJiBNYXRoLmFicyh0b3VjaC55MSAtIHRvdWNoLnkyKSA+IDMwKSl7XHJcblxyXG4gICAgICAgICAgc3dpcGVUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgaWYgKCB0b3VjaC5lbCAhPT0gdW5kZWZpbmVkICkge1xyXG4gICAgICAgICAgICAgIHRvdWNoLmVsLnRyaWdnZXIoJ3N3aXBlJyk7XHJcbiAgICAgICAgICAgICAgdG91Y2guZWwudHJpZ2dlcignc3dpcGUnICsgKHN3aXBlRGlyZWN0aW9uKHRvdWNoLngxLCB0b3VjaC54MiwgdG91Y2gueTEsIHRvdWNoLnkyKSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRvdWNoID0ge307XHJcbiAgICAgICAgICB9LCAwKTtcclxuXHJcbiAgICAgICAgLy8gbm9ybWFsIHRhcFxyXG4gICAgICAgIH0gZWxzZSBpZiAoJ2xhc3QnIGluIHRvdWNoKSB7XHJcblxyXG4gICAgICAgICAgLy8gZG9uJ3QgZmlyZSB0YXAgd2hlbiBkZWx0YSBwb3NpdGlvbiBjaGFuZ2VkIGJ5IG1vcmUgdGhhbiAzMCBwaXhlbHMsXHJcbiAgICAgICAgICAvLyBmb3IgaW5zdGFuY2Ugd2hlbiBtb3ZpbmcgdG8gYSBwb2ludCBhbmQgYmFjayB0byBvcmlnaW5cclxuICAgICAgICAgIGlmIChpc05hTihkZWx0YVgpIHx8IChkZWx0YVggPCAzMCAmJiBkZWx0YVkgPCAzMCkpIHtcclxuICAgICAgICAgICAgLy8gZGVsYXkgYnkgb25lIHRpY2sgc28gd2UgY2FuIGNhbmNlbCB0aGUgJ3RhcCcgZXZlbnQgaWYgJ3Njcm9sbCcgZmlyZXNcclxuICAgICAgICAgICAgLy8gKCd0YXAnIGZpcmVzIGJlZm9yZSAnc2Nyb2xsJylcclxuICAgICAgICAgICAgdGFwVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcblxyXG4gICAgICAgICAgICAgIC8vIHRyaWdnZXIgdW5pdmVyc2FsICd0YXAnIHdpdGggdGhlIG9wdGlvbiB0byBjYW5jZWxUb3VjaCgpXHJcbiAgICAgICAgICAgICAgLy8gKGNhbmNlbFRvdWNoIGNhbmNlbHMgcHJvY2Vzc2luZyBvZiBzaW5nbGUgdnMgZG91YmxlIHRhcHMgZm9yIGZhc3RlciAndGFwJyByZXNwb25zZSlcclxuICAgICAgICAgICAgICB2YXIgZXZlbnQgPSAkLkV2ZW50KCd0YXAnKTtcclxuICAgICAgICAgICAgICBldmVudC5jYW5jZWxUb3VjaCA9IGNhbmNlbEFsbDtcclxuICAgICAgICAgICAgICBpZiAoIHRvdWNoLmVsICE9PSB1bmRlZmluZWQgKSB0b3VjaC5lbC50cmlnZ2VyKGV2ZW50KTtcclxuXHJcbiAgICAgICAgICAgICAgLy8gdHJpZ2dlciBkb3VibGUgdGFwIGltbWVkaWF0ZWx5XHJcbiAgICAgICAgICAgICAgaWYgKHRvdWNoLmlzRG91YmxlVGFwKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIHRvdWNoLmVsICE9PSB1bmRlZmluZWQgKSB0b3VjaC5lbC50cmlnZ2VyKCdkb3VibGVUYXAnKTtcclxuICAgICAgICAgICAgICAgIHRvdWNoID0ge307XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAvLyB0cmlnZ2VyIHNpbmdsZSB0YXAgYWZ0ZXIgMjUwbXMgb2YgaW5hY3Rpdml0eVxyXG4gICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdG91Y2hUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICB0b3VjaFRpbWVvdXQgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgICBpZiAoIHRvdWNoLmVsICE9PSB1bmRlZmluZWQgKSB0b3VjaC5lbC50cmlnZ2VyKCdzaW5nbGVUYXAnKTtcclxuICAgICAgICAgICAgICAgICAgdG91Y2ggPSB7fTtcclxuICAgICAgICAgICAgICAgIH0sIDI1MCk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LCAwKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRvdWNoID0ge307XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBkZWx0YVggPSBkZWx0YVkgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgICAgLy8gd2hlbiB0aGUgYnJvd3NlciB3aW5kb3cgbG9zZXMgZm9jdXMsXHJcbiAgICAgIC8vIGZvciBleGFtcGxlIHdoZW4gYSBtb2RhbCBkaWFsb2cgaXMgc2hvd24sXHJcbiAgICAgIC8vIGNhbmNlbCBhbGwgb25nb2luZyBldmVudHNcclxuICAgICAgLm9uKCd0b3VjaGNhbmNlbCBNU1BvaW50ZXJDYW5jZWwgcG9pbnRlcmNhbmNlbCcsIGNhbmNlbEFsbCk7XHJcblxyXG4gICAgLy8gc2Nyb2xsaW5nIHRoZSB3aW5kb3cgaW5kaWNhdGVzIGludGVudGlvbiBvZiB0aGUgdXNlclxyXG4gICAgLy8gdG8gc2Nyb2xsLCBub3QgdGFwIG9yIHN3aXBlLCBzbyBjYW5jZWwgYWxsIG9uZ29pbmcgZXZlbnRzXHJcbiAgICAkKHdpbmRvdykub24oJ3Njcm9sbCcsIGNhbmNlbEFsbCk7XHJcbiAgfSk7XHJcblxyXG4gIFsnc3dpcGUnLCAnc3dpcGVMZWZ0JywgJ3N3aXBlUmlnaHQnLCAnc3dpcGVVcCcsICdzd2lwZURvd24nLCAnZG91YmxlVGFwJywgJ3RhcCcsICdzaW5nbGVUYXAnLCAnbG9uZ1RhcCddLmZvckVhY2goZnVuY3Rpb24oZXZlbnROYW1lKXtcclxuICAgICQuZm5bZXZlbnROYW1lXSA9IGZ1bmN0aW9uKGNhbGxiYWNrKXsgcmV0dXJuICQodGhpcykub24oZXZlbnROYW1lLCBjYWxsYmFjayk7IH07XHJcbiAgfSk7XHJcbn0pKGpRdWVyeSk7Il19
