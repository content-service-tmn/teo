!function(a){"use strict";var n,i=!1,e=0,o=a.$html;a.$win.on("resize orientationchange",a.Utils.debounce(function(){a.$(".uk-modal.uk-open").each(function(){return a.$(this).data("modal")&&a.$(this).data("modal").resize()})},150)),a.component("modal",{defaults:{keyboard:!0,bgclose:!0,minScrollHeight:150,center:!1,modal:!0},scrollable:!1,transition:!1,hasTransitioned:!0,init:function(){if(n||(n=a.$("body")),this.element.length){var i=this;this.paddingdir="padding-"+("left"==a.langdirection?"right":"left"),this.dialog=this.find(".uk-modal-dialog"),this.active=!1,this.element.attr("aria-hidden",this.element.hasClass("uk-open")),this.on("click",".uk-modal-close",function(t){t.preventDefault(),i.hide()}).on("click",function(t){a.$(t.target)[0]==i.element[0]&&i.options.bgclose&&i.hide()}),a.domObserve(this.element,function(t){i.resize()})}},toggle:function(){return this[this.isActive()?"hide":"show"]()},show:function(){if(this.element.length){var t=this;if(!this.isActive())return this.options.modal&&i&&i.hide(!0),this.element.removeClass("uk-open").show(),this.resize(!0),this.options.modal&&(i=this),this.active=!0,e++,a.support.transition?(this.hasTransitioned=!1,this.element.one(a.support.transition.end,function(){t.hasTransitioned=!0,a.Utils.focus(t.dialog,"a[href]")}).addClass("uk-open")):(this.element.addClass("uk-open"),a.Utils.focus(this.dialog,"a[href]")),o.addClass("uk-modal-page").height(),this.element.attr("aria-hidden","false"),this.element.trigger("show.uk.modal"),a.Utils.checkDisplay(this.dialog,!0),this}},hide:function(t){if(!t&&a.support.transition&&this.hasTransitioned){var i=this;this.one(a.support.transition.end,function(){i._hide()}).removeClass("uk-open")}else this._hide();return this},resize:function(t){if(this.isActive()||t){var i=n.width();if(this.scrollbarwidth=window.innerWidth-i,n.css(this.paddingdir,this.scrollbarwidth),this.element.css("overflow-y",this.scrollbarwidth?"scroll":"auto"),!this.updateScrollable()&&this.options.center){var e=this.dialog.outerHeight(),o=parseInt(this.dialog.css("margin-top"),10)+parseInt(this.dialog.css("margin-bottom"),10);e+o<window.innerHeight?this.dialog.css({top:window.innerHeight/2-e/2-o}):this.dialog.css({top:""})}}},updateScrollable:function(){var t=this.dialog.find(".uk-overflow-container:visible:first");if(t.length){t.css("height",0);var i=Math.abs(parseInt(this.dialog.css("margin-top"),10)),e=this.dialog.outerHeight(),o=window.innerHeight-2*(i<20?20:i)-e;return t.css({maxHeight:o<this.options.minScrollHeight?"":o,height:""}),!0}return!1},_hide:function(){this.active=!1,0<e?e--:e=0,this.element.hide().removeClass("uk-open"),this.element.attr("aria-hidden","true"),e||(o.removeClass("uk-modal-page"),n.css(this.paddingdir,"")),i===this&&(i=!1),this.trigger("hide.uk.modal")},isActive:function(){return this.element.hasClass("uk-open")}}),a.component("modalTrigger",{boot:function(){a.$html.on("click.modal.uikit","[data-uk-modal]",function(t){var i=a.$(this);(i.is("a")&&t.preventDefault(),i.data("modalTrigger"))||a.modalTrigger(i,a.Utils.options(i.attr("data-uk-modal"))).show()}),a.$html.on("keydown.modal.uikit",function(t){i&&27===t.keyCode&&i.options.keyboard&&(t.preventDefault(),i.hide())})},init:function(){var i=this;this.options=a.$.extend({target:!!i.element.is("a")&&i.element.attr("href")},this.options),this.modal=a.modal(this.options.target,this.options),this.on("click",function(t){t.preventDefault(),i.show()}),this.proxy(this.modal,"show hide isActive")}}),a.modal.dialog=function(t,i){var e=a.modal(a.$(a.modal.dialog.template).appendTo("body"),i);return e.on("hide.uk.modal",function(){e.persist&&(e.persist.appendTo(e.persist.data("modalPersistParent")),e.persist=!1),e.element.remove()}),function(t,i){if(!i)return;"object"==typeof t?(t=t instanceof jQuery?t:a.$(t)).parent().length&&(i.persist=t,i.persist.data("modalPersistParent",t.parent())):t="string"==typeof t||"number"==typeof t?a.$("<div></div>").html(t):a.$("<div></div>").html("UIkit2.modal Error: Unsupported data type: "+typeof t);t.appendTo(i.element.find(".uk-modal-dialog"))}(t,e),e},a.modal.dialog.template='<div class="uk-modal"><div class="uk-modal-dialog" style="min-height:0;"></div></div>',a.modal.alert=function(t,i){i=a.$.extend(!0,{bgclose:!1,keyboard:!1,modal:!1,labels:a.modal.labels},i);var e=a.modal.dialog(['<div class="uk-margin uk-modal-content">'+String(t)+"</div>",'<div class="uk-modal-footer uk-text-right"><button class="uk-button uk-button-primary uk-modal-close">'+i.labels.Ok+"</button></div>"].join(""),i);return e.on("show.uk.modal",function(){setTimeout(function(){e.element.find("button:first").focus()},50)}),e.show()},a.modal.confirm=function(t,i,e){var o=1<arguments.length&&arguments[arguments.length-1]?arguments[arguments.length-1]:{};i=a.$.isFunction(i)?i:function(){},e=a.$.isFunction(e)?e:function(){},o=a.$.extend(!0,{bgclose:!1,keyboard:!1,modal:!1,labels:a.modal.labels},a.$.isFunction(o)?{}:o);var n=a.modal.dialog(['<div class="uk-margin uk-modal-content">'+String(t)+"</div>",'<div class="uk-modal-footer uk-text-right"><button class="uk-button js-modal-confirm-cancel">'+o.labels.Cancel+'</button> <button class="uk-button uk-button-primary js-modal-confirm">'+o.labels.Ok+"</button></div>"].join(""),o);return n.element.find(".js-modal-confirm, .js-modal-confirm-cancel").on("click",function(){a.$(this).is(".js-modal-confirm")?i():e(),n.hide()}),n.on("show.uk.modal",function(){setTimeout(function(){n.element.find(".js-modal-confirm").focus()},50)}),n.show()},a.modal.prompt=function(t,i,e,o){e=a.$.isFunction(e)?e:function(t){},o=a.$.extend(!0,{bgclose:!1,keyboard:!1,modal:!1,labels:a.modal.labels},o);var n=a.modal.dialog([t?'<div class="uk-modal-content uk-form">'+String(t)+"</div>":"",'<div class="uk-margin-small-top uk-modal-content uk-form"><p><input type="text" class="uk-width-1-1"></p></div>','<div class="uk-modal-footer uk-text-right"><button class="uk-button uk-modal-close">'+o.labels.Cancel+'</button> <button class="uk-button uk-button-primary js-modal-ok">'+o.labels.Ok+"</button></div>"].join(""),o),s=n.element.find("input[type='text']").val(i||"").on("keyup",function(t){13==t.keyCode&&n.element.find(".js-modal-ok").trigger("click")});return n.element.find(".js-modal-ok").on("click",function(){!1!==e(s.val())&&n.hide()}),n.show()},a.modal.blockUI=function(t,i){var e=a.modal.dialog(['<div class="uk-margin uk-modal-content">'+String(t||'<div class="uk-text-center">...</div>')+"</div>"].join(""),a.$.extend({bgclose:!1,keyboard:!1,modal:!1},i));return e.content=e.element.find(".uk-modal-content:first"),e.show()},a.modal.labels={Ok:"Ok",Cancel:"Cancel"}}(UIkit2);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
