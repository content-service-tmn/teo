!function(f){"use strict";var r={x:window.scrollX,y:window.scrollY},c=(f.$win,f.$doc,f.$html),o={show:function(a,t){if((a=f.$(a)).length){t=f.$.extend({mode:"push"},t);var n=f.$("body"),i=a.find(".uk-offcanvas-bar:first"),o="right"==f.langdirection,s=(i.hasClass("uk-offcanvas-bar-flip")?-1:1)*(o?-1:1),e=window.innerWidth-n.width();r={x:window.pageXOffset,y:window.pageYOffset},i.attr("mode",t.mode),a.addClass("uk-active"),n.css({width:window.innerWidth-e,height:window.innerHeight}).addClass("uk-offcanvas-page"),"push"!=t.mode&&"reveal"!=t.mode||n.css(o?"margin-right":"margin-left",(o?-1:1)*(i.outerWidth()*s)),"reveal"==t.mode&&i.css("clip","rect(0, "+i.outerWidth()+"px, 100vh, 0)"),c.css("margin-top",-1*r.y).width(),i.addClass("uk-offcanvas-bar-show"),this._initElement(a),i.trigger("show.uk.offcanvas",[a,i])}},hide:function(a){var t=f.$("body"),n=f.$(".uk-offcanvas.uk-active"),i="right"==f.langdirection,o=n.find(".uk-offcanvas-bar:first"),s=function(){t.removeClass("uk-offcanvas-page").css({width:"",height:"",marginLeft:"",marginRight:""}),n.removeClass("uk-active"),o.removeClass("uk-offcanvas-bar-show"),c.css("margin-top",""),window.scrollTo(r.x,r.y),o.trigger("hide.uk.offcanvas",[n,o])};n.length&&("none"==o.attr("mode")&&(a=!0),f.support.transition&&!a?(n.one(f.support.transition.end,function(){s()}).css(i?"margin-right":"margin-left",""),"reveal"==o.attr("mode")&&o.css("clip",""),setTimeout(function(){o.removeClass("uk-offcanvas-bar-show")},0)):s())},_initElement:function(a){a.data("OffcanvasInit")||(a.on("click.uk.offcanvas swipeRight.uk.offcanvas swipeLeft.uk.offcanvas",function(a){var t=f.$(a.target);if(!a.type.match(/swipe/)&&!t.hasClass("uk-offcanvas-close")){if(t.hasClass("uk-offcanvas-bar"))return;if(t.parents(".uk-offcanvas-bar:first").length)return}a.stopImmediatePropagation(),o.hide()}),a.on("click",'a[href*="#"]',function(a){var n=f.$(this),i=n.attr("href");"#"!=i&&(f.$doc.one("hide.uk.offcanvas",function(){var t;try{t=f.$(n[0].hash)}catch(a){t=""}t.length||(t=f.$('[name="'+n[0].hash.replace("#","")+'"]')),t.length&&f.Utils.scrollToElement?f.Utils.scrollToElement(t,f.Utils.options(n.attr("data-uk-smooth-scroll")||"{}")):window.location.href=i}),o.hide())}),a.data("OffcanvasInit",!0))}};f.component("offcanvasTrigger",{boot:function(){c.on("click.offcanvas.uikit","[data-uk-offcanvas]",function(a){a.preventDefault();var t=f.$(this);if(!t.data("offcanvasTrigger")){f.offcanvasTrigger(t,f.Utils.options(t.attr("data-uk-offcanvas")));t.trigger("click")}}),c.on("keydown.uk.offcanvas",function(a){27===a.keyCode&&o.hide()})},init:function(){var t=this;this.options=f.$.extend({target:!!t.element.is("a")&&t.element.attr("href"),mode:"push"},this.options),this.on("click",function(a){a.preventDefault(),o.show(t.options.target,t.options)})}}),f.offcanvas=o}(UIkit2);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
