!function(s){"use strict";var o=[];s.component("toggle",{defaults:{target:!1,cls:"uk-hidden",animation:!1,duration:200},boot:function(){s.ready(function(t){s.$("[data-uk-toggle]",t).each(function(){var t=s.$(this);if(!t.data("toggle"))s.toggle(t,s.Utils.options(t.attr("data-uk-toggle")))}),setTimeout(function(){o.forEach(function(t){t.getToggles()})},0)})},init:function(){var i=this;this.aria=-1!==this.options.cls.indexOf("uk-hidden"),this.on("click",function(t){i.element.is('a[href="#"]')&&t.preventDefault(),i.toggle()}),o.push(this)},toggle:function(){if(this.getToggles(),this.totoggle.length){if(this.options.animation&&s.support.animation){var i=this,o=this.options.animation.split(",");1==o.length&&(o[1]=o[0]),o[0]=o[0].trim(),o[1]=o[1].trim(),this.totoggle.css("animation-duration",this.options.duration+"ms"),this.totoggle.each(function(){var t=s.$(this);t.hasClass(i.options.cls)?(t.toggleClass(i.options.cls),s.Utils.animate(t,o[0]).then(function(){t.css("animation-duration",""),s.Utils.checkDisplay(t)})):s.Utils.animate(this,o[1]+" uk-animation-reverse").then(function(){t.toggleClass(i.options.cls).css("animation-duration",""),s.Utils.checkDisplay(t)})})}else this.totoggle.toggleClass(this.options.cls),s.Utils.checkDisplay(this.totoggle);this.updateAria()}},getToggles:function(){this.totoggle=this.options.target?s.$(this.options.target):[],this.updateAria()},updateAria:function(){this.aria&&this.totoggle.length&&this.totoggle.not("[aria-hidden]").each(function(){s.$(this).attr("aria-hidden",s.$(this).hasClass("uk-hidden"))})}})}(UIkit2);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvdG9nZ2xlLmpzIl0sIm5hbWVzIjpbIlVJIiwidG9nZ2xlcyIsImNvbXBvbmVudCIsImRlZmF1bHRzIiwidGFyZ2V0IiwiY2xzIiwiYW5pbWF0aW9uIiwiZHVyYXRpb24iLCJib290IiwicmVhZHkiLCJjb250ZXh0IiwiJCIsImVhY2giLCJlbGUiLCJ0aGlzIiwiZGF0YSIsInRvZ2dsZSIsIlV0aWxzIiwib3B0aW9ucyIsImF0dHIiLCJzZXRUaW1lb3V0IiwiZm9yRWFjaCIsImdldFRvZ2dsZXMiLCJpbml0IiwiJHRoaXMiLCJhcmlhIiwiaW5kZXhPZiIsIm9uIiwiZSIsImVsZW1lbnQiLCJpcyIsInByZXZlbnREZWZhdWx0IiwicHVzaCIsInRvdG9nZ2xlIiwibGVuZ3RoIiwic3VwcG9ydCIsImFuaW1hdGlvbnMiLCJzcGxpdCIsInRyaW0iLCJjc3MiLCJoYXNDbGFzcyIsInRvZ2dsZUNsYXNzIiwiYW5pbWF0ZSIsInRoZW4iLCJjaGVja0Rpc3BsYXkiLCJ1cGRhdGVBcmlhIiwibm90IiwiVUlraXQyIl0sIm1hcHBpbmdzIjoiQ0FDQSxTQUFVQSxHQUVOLGFBRUEsSUFBSUMsRUFBVSxHQUVkRCxFQUFHRSxVQUFVLFNBQVUsQ0FFbkJDLFNBQVUsQ0FDTkMsUUFBWSxFQUNaQyxJQUFZLFlBQ1pDLFdBQVksRUFDWkMsU0FBWSxLQUdoQkMsS0FBTSxXQUdGUixFQUFHUyxNQUFNLFNBQVNDLEdBRWRWLEVBQUdXLEVBQUUsbUJBQW9CRCxHQUFTRSxLQUFLLFdBQ25DLElBQUlDLEVBQU1iLEVBQUdXLEVBQUVHLE1BRWYsSUFBS0QsRUFBSUUsS0FBSyxVQUNBZixFQUFHZ0IsT0FBT0gsRUFBS2IsRUFBR2lCLE1BQU1DLFFBQVFMLEVBQUlNLEtBQUssc0JBSTNEQyxXQUFXLFdBRVBuQixFQUFRb0IsUUFBUSxTQUFTTCxHQUNyQkEsRUFBT00sZ0JBR1osTUFJWEMsS0FBTSxXQUVGLElBQUlDLEVBQVFWLEtBRVpBLEtBQUtXLE1BQW1ELElBQTNDWCxLQUFLSSxRQUFRYixJQUFJcUIsUUFBUSxhQUV0Q1osS0FBS2EsR0FBRyxRQUFTLFNBQVNDLEdBRWxCSixFQUFNSyxRQUFRQyxHQUFHLGdCQUNqQkYsRUFBRUcsaUJBR05QLEVBQU1SLFdBR1ZmLEVBQVErQixLQUFLbEIsT0FHakJFLE9BQVEsV0FJSixHQUZBRixLQUFLUSxhQUVEUixLQUFLbUIsU0FBU0MsT0FBbEIsQ0FFQSxHQUFJcEIsS0FBS0ksUUFBUVosV0FBYU4sRUFBR21DLFFBQVE3QixVQUFXLENBRWhELElBQUlrQixFQUFRVixLQUFNc0IsRUFBYXRCLEtBQUtJLFFBQVFaLFVBQVUrQixNQUFNLEtBRW5DLEdBQXJCRCxFQUFXRixTQUNYRSxFQUFXLEdBQUtBLEVBQVcsSUFHL0JBLEVBQVcsR0FBS0EsRUFBVyxHQUFHRSxPQUM5QkYsRUFBVyxHQUFLQSxFQUFXLEdBQUdFLE9BRTlCeEIsS0FBS21CLFNBQVNNLElBQUkscUJBQXNCekIsS0FBS0ksUUFBUVgsU0FBUyxNQUU5RE8sS0FBS21CLFNBQVNyQixLQUFLLFdBRWYsSUFBSUMsRUFBTWIsRUFBR1csRUFBRUcsTUFFWEQsRUFBSTJCLFNBQVNoQixFQUFNTixRQUFRYixNQUUzQlEsRUFBSTRCLFlBQVlqQixFQUFNTixRQUFRYixLQUU5QkwsRUFBR2lCLE1BQU15QixRQUFRN0IsRUFBS3VCLEVBQVcsSUFBSU8sS0FBSyxXQUN0QzlCLEVBQUkwQixJQUFJLHFCQUFzQixJQUM5QnZDLEVBQUdpQixNQUFNMkIsYUFBYS9CLE1BSzFCYixFQUFHaUIsTUFBTXlCLFFBQVE1QixLQUFNc0IsRUFBVyxHQUFHLHlCQUF5Qk8sS0FBSyxXQUMvRDlCLEVBQUk0QixZQUFZakIsRUFBTU4sUUFBUWIsS0FBS2tDLElBQUkscUJBQXNCLElBQzdEdkMsRUFBR2lCLE1BQU0yQixhQUFhL0IsWUFRbENDLEtBQUttQixTQUFTUSxZQUFZM0IsS0FBS0ksUUFBUWIsS0FDdkNMLEVBQUdpQixNQUFNMkIsYUFBYTlCLEtBQUttQixVQUcvQm5CLEtBQUsrQixlQUlUdkIsV0FBWSxXQUNSUixLQUFLbUIsU0FBV25CLEtBQUtJLFFBQVFkLE9BQVNKLEVBQUdXLEVBQUVHLEtBQUtJLFFBQVFkLFFBQVEsR0FDaEVVLEtBQUsrQixjQUdUQSxXQUFZLFdBQ0ovQixLQUFLVyxNQUFRWCxLQUFLbUIsU0FBU0MsUUFDM0JwQixLQUFLbUIsU0FBU2EsSUFBSSxpQkFBaUJsQyxLQUFLLFdBQ3BDWixFQUFHVyxFQUFFRyxNQUFNSyxLQUFLLGNBQWVuQixFQUFHVyxFQUFFRyxNQUFNMEIsU0FBUyxtQkFwSHZFLENBMEhHTyIsImZpbGUiOiJjb3JlL3RvZ2dsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBVSWtpdCAyLjI3LjIgfCBodHRwOi8vd3d3LmdldHVpa2l0LmNvbSB8IChjKSAyMDE0IFlPT3RoZW1lIHwgTUlUIExpY2Vuc2UgKi9cbihmdW5jdGlvbihVSSl7XG5cbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIHZhciB0b2dnbGVzID0gW107XG5cbiAgICBVSS5jb21wb25lbnQoJ3RvZ2dsZScsIHtcblxuICAgICAgICBkZWZhdWx0czoge1xuICAgICAgICAgICAgdGFyZ2V0ICAgIDogZmFsc2UsXG4gICAgICAgICAgICBjbHMgICAgICAgOiAndWstaGlkZGVuJyxcbiAgICAgICAgICAgIGFuaW1hdGlvbiA6IGZhbHNlLFxuICAgICAgICAgICAgZHVyYXRpb24gIDogMjAwXG4gICAgICAgIH0sXG5cbiAgICAgICAgYm9vdDogZnVuY3Rpb24oKXtcblxuICAgICAgICAgICAgLy8gaW5pdCBjb2RlXG4gICAgICAgICAgICBVSS5yZWFkeShmdW5jdGlvbihjb250ZXh0KSB7XG5cbiAgICAgICAgICAgICAgICBVSS4kKCdbZGF0YS11ay10b2dnbGVdJywgY29udGV4dCkuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVsZSA9IFVJLiQodGhpcyk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFlbGUuZGF0YSgndG9nZ2xlJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvYmogPSBVSS50b2dnbGUoZWxlLCBVSS5VdGlscy5vcHRpb25zKGVsZS5hdHRyKCdkYXRhLXVrLXRvZ2dsZScpKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcblxuICAgICAgICAgICAgICAgICAgICB0b2dnbGVzLmZvckVhY2goZnVuY3Rpb24odG9nZ2xlKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZS5nZXRUb2dnbGVzKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgfSwgMCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcblxuICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgdmFyICR0aGlzID0gdGhpcztcblxuICAgICAgICAgICAgdGhpcy5hcmlhID0gKHRoaXMub3B0aW9ucy5jbHMuaW5kZXhPZigndWstaGlkZGVuJykgIT09IC0xKTtcblxuICAgICAgICAgICAgdGhpcy5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7XG5cbiAgICAgICAgICAgICAgICBpZiAoJHRoaXMuZWxlbWVudC5pcygnYVtocmVmPVwiI1wiXScpKSB7XG4gICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAkdGhpcy50b2dnbGUoKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB0b2dnbGVzLnB1c2godGhpcyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgdG9nZ2xlOiBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgdGhpcy5nZXRUb2dnbGVzKCk7XG5cbiAgICAgICAgICAgIGlmKCF0aGlzLnRvdG9nZ2xlLmxlbmd0aCkgcmV0dXJuO1xuXG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmFuaW1hdGlvbiAmJiBVSS5zdXBwb3J0LmFuaW1hdGlvbikge1xuXG4gICAgICAgICAgICAgICAgdmFyICR0aGlzID0gdGhpcywgYW5pbWF0aW9ucyA9IHRoaXMub3B0aW9ucy5hbmltYXRpb24uc3BsaXQoJywnKTtcblxuICAgICAgICAgICAgICAgIGlmIChhbmltYXRpb25zLmxlbmd0aCA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbnNbMV0gPSBhbmltYXRpb25zWzBdO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGFuaW1hdGlvbnNbMF0gPSBhbmltYXRpb25zWzBdLnRyaW0oKTtcbiAgICAgICAgICAgICAgICBhbmltYXRpb25zWzFdID0gYW5pbWF0aW9uc1sxXS50cmltKCk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLnRvdG9nZ2xlLmNzcygnYW5pbWF0aW9uLWR1cmF0aW9uJywgdGhpcy5vcHRpb25zLmR1cmF0aW9uKydtcycpO1xuXG4gICAgICAgICAgICAgICAgdGhpcy50b3RvZ2dsZS5lYWNoKGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGVsZSA9IFVJLiQodGhpcyk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGVsZS5oYXNDbGFzcygkdGhpcy5vcHRpb25zLmNscykpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgZWxlLnRvZ2dsZUNsYXNzKCR0aGlzLm9wdGlvbnMuY2xzKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgVUkuVXRpbHMuYW5pbWF0ZShlbGUsIGFuaW1hdGlvbnNbMF0pLnRoZW4oZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGUuY3NzKCdhbmltYXRpb24tZHVyYXRpb24nLCAnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVUkuVXRpbHMuY2hlY2tEaXNwbGF5KGVsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBVSS5VdGlscy5hbmltYXRlKHRoaXMsIGFuaW1hdGlvbnNbMV0rJyB1ay1hbmltYXRpb24tcmV2ZXJzZScpLnRoZW4oZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGUudG9nZ2xlQ2xhc3MoJHRoaXMub3B0aW9ucy5jbHMpLmNzcygnYW5pbWF0aW9uLWR1cmF0aW9uJywgJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVJLlV0aWxzLmNoZWNrRGlzcGxheShlbGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy50b3RvZ2dsZS50b2dnbGVDbGFzcyh0aGlzLm9wdGlvbnMuY2xzKTtcbiAgICAgICAgICAgICAgICBVSS5VdGlscy5jaGVja0Rpc3BsYXkodGhpcy50b3RvZ2dsZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMudXBkYXRlQXJpYSgpO1xuXG4gICAgICAgIH0sXG5cbiAgICAgICAgZ2V0VG9nZ2xlczogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB0aGlzLnRvdG9nZ2xlID0gdGhpcy5vcHRpb25zLnRhcmdldCA/IFVJLiQodGhpcy5vcHRpb25zLnRhcmdldCk6W107XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUFyaWEoKTtcbiAgICAgICAgfSxcblxuICAgICAgICB1cGRhdGVBcmlhOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmFyaWEgJiYgdGhpcy50b3RvZ2dsZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnRvdG9nZ2xlLm5vdCgnW2FyaWEtaGlkZGVuXScpLmVhY2goZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgVUkuJCh0aGlzKS5hdHRyKCdhcmlhLWhpZGRlbicsIFVJLiQodGhpcykuaGFzQ2xhc3MoJ3VrLWhpZGRlbicpKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xuXG59KShVSWtpdDIpOyJdfQ==
