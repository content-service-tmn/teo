!function(e){var s;window.UIkit2&&(s=e(UIkit2)),"function"==typeof define&&define.amd&&define("uikit-search",["uikit"],function(){return s||e(UIkit2)})}(function(i){"use strict";i.component("search",{defaults:{msgResultsHeader:"Search Results",msgMoreResults:"More Results",msgNoResults:"No results found",template:'<ul class="uk-nav uk-nav-search uk-autocomplete-results">                                      {{#msgResultsHeader}}<li class="uk-nav-header uk-skip">{{msgResultsHeader}}</li>{{/msgResultsHeader}}                                      {{#items && items.length}}                                          {{~items}}                                          <li data-url="{{!$item.url}}">                                              <a href="{{!$item.url}}">                                                  {{{$item.title}}}                                                  {{#$item.text}}<div>{{{$item.text}}}</div>{{/$item.text}}                                              </a>                                          </li>                                          {{/items}}                                          {{#msgMoreResults}}                                              <li class="uk-nav-divider uk-skip"></li>                                              <li class="uk-search-moreresults" data-moreresults="true"><a href="#" onclick="jQuery(this).closest(\'form\').submit();">{{msgMoreResults}}</a></li>                                          {{/msgMoreResults}}                                      {{/end}}                                      {{^items.length}}                                        {{#msgNoResults}}<li class="uk-skip"><a>{{msgNoResults}}</a></li>{{/msgNoResults}}                                      {{/end}}                                  </ul>',renderer:function(e){var s=this.options;this.dropdown.append(this.template({items:e.results||[],msgResultsHeader:s.msgResultsHeader,msgMoreResults:s.msgMoreResults,msgNoResults:s.msgNoResults})),this.show()}},boot:function(){i.$html.on("focus.search.uikit","[data-uk-search]",function(e){var s=i.$(this);s.data("search")||i.search(s,i.Utils.options(s.attr("data-uk-search")))})},init:function(){var t=this;this.autocomplete=i.autocomplete(this.element,this.options),this.autocomplete.dropdown.addClass("uk-dropdown-search"),this.autocomplete.input.on("keyup",function(){t.element[t.autocomplete.input.val()?"addClass":"removeClass"]("uk-active")}).closest("form").on("reset",function(){t.value="",t.element.removeClass("uk-active")}),this.on("selectitem.uk.autocomplete",function(e,s){s.url?location.href=s.url:s.moreresults&&t.autocomplete.input.closest("form").submit()}),this.element.data("search",this)}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvc2VhcmNoLmpzIl0sIm5hbWVzIjpbImFkZG9uIiwiY29tcG9uZW50Iiwid2luZG93IiwiVUlraXQyIiwiZGVmaW5lIiwiYW1kIiwiVUkiLCJkZWZhdWx0cyIsIm1zZ1Jlc3VsdHNIZWFkZXIiLCJtc2dNb3JlUmVzdWx0cyIsIm1zZ05vUmVzdWx0cyIsInRlbXBsYXRlIiwicmVuZGVyZXIiLCJkYXRhIiwib3B0cyIsInRoaXMiLCJvcHRpb25zIiwiZHJvcGRvd24iLCJhcHBlbmQiLCJpdGVtcyIsInJlc3VsdHMiLCJzaG93IiwiYm9vdCIsIiRodG1sIiwib24iLCJlIiwiZWxlIiwiJCIsInNlYXJjaCIsIlV0aWxzIiwiYXR0ciIsImluaXQiLCIkdGhpcyIsImF1dG9jb21wbGV0ZSIsImVsZW1lbnQiLCJhZGRDbGFzcyIsImlucHV0IiwidmFsIiwiY2xvc2VzdCIsInZhbHVlIiwicmVtb3ZlQ2xhc3MiLCJ1cmwiLCJsb2NhdGlvbiIsImhyZWYiLCJtb3JlcmVzdWx0cyIsInN1Ym1pdCJdLCJtYXBwaW5ncyI6IkNBQ0EsU0FBVUEsR0FFTixJQUFJQyxFQUVBQyxPQUFPQyxTQUNQRixFQUFZRCxFQUFNRyxTQUdELG1CQUFWQyxRQUF3QkEsT0FBT0MsS0FDdENELE9BQU8sZUFBZ0IsQ0FBQyxTQUFVLFdBQzlCLE9BQU9ILEdBQWFELEVBQU1HLFVBVnRDLENBY0csU0FBU0csR0FFUixhQUVBQSxFQUFHTCxVQUFVLFNBQVUsQ0FDbkJNLFNBQVUsQ0FDTkMsaUJBQXFCLGlCQUNyQkMsZUFBcUIsZUFDckJDLGFBQXFCLG1CQUNyQkMsU0FBcUIsbTlDQXFCckJDLFNBQVUsU0FBU0MsR0FFZixJQUFJQyxFQUFPQyxLQUFLQyxRQUVoQkQsS0FBS0UsU0FBU0MsT0FBT0gsS0FBS0osU0FBUyxDQUFDUSxNQUFNTixFQUFLTyxTQUFXLEdBQUlaLGlCQUFpQk0sRUFBS04saUJBQWtCQyxlQUFnQkssRUFBS0wsZUFBZ0JDLGFBQWNJLEVBQUtKLGdCQUM5SkssS0FBS00sU0FJYkMsS0FBTSxXQUdGaEIsRUFBR2lCLE1BQU1DLEdBQUcscUJBQXNCLG1CQUFvQixTQUFTQyxHQUMzRCxJQUFJQyxFQUFLcEIsRUFBR3FCLEVBQUVaLE1BRVRXLEVBQUliLEtBQUssV0FDVlAsRUFBR3NCLE9BQU9GLEVBQUtwQixFQUFHdUIsTUFBTWIsUUFBUVUsRUFBSUksS0FBSyx1QkFLckRDLEtBQU0sV0FDRixJQUFJQyxFQUFRakIsS0FFWkEsS0FBS2tCLGFBQWUzQixFQUFHMkIsYUFBYWxCLEtBQUttQixRQUFTbkIsS0FBS0MsU0FFdkRELEtBQUtrQixhQUFhaEIsU0FBU2tCLFNBQVMsc0JBRXBDcEIsS0FBS2tCLGFBQWFHLE1BQU1aLEdBQUcsUUFBUyxXQUNoQ1EsRUFBTUUsUUFBUUYsRUFBTUMsYUFBYUcsTUFBTUMsTUFBUSxXQUFXLGVBQWUsZUFDMUVDLFFBQVEsUUFBUWQsR0FBRyxRQUFTLFdBQzNCUSxFQUFNTyxNQUFRLEdBQ2RQLEVBQU1FLFFBQVFNLFlBQVksZUFHOUJ6QixLQUFLUyxHQUFHLDZCQUE4QixTQUFTQyxFQUFHWixHQUMxQ0EsRUFBSzRCLElBQ1BDLFNBQVNDLEtBQU85QixFQUFLNEIsSUFDYjVCLEVBQUsrQixhQUNiWixFQUFNQyxhQUFhRyxNQUFNRSxRQUFRLFFBQVFPLFdBSS9DOUIsS0FBS21CLFFBQVFyQixLQUFLLFNBQVVFIiwiZmlsZSI6ImNvbXBvbmVudHMvc2VhcmNoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIFVJa2l0IDIuMjcuMiB8IGh0dHA6Ly93d3cuZ2V0dWlraXQuY29tIHwgKGMpIDIwMTQgWU9PdGhlbWUgfCBNSVQgTGljZW5zZSAqL1xuKGZ1bmN0aW9uKGFkZG9uKSB7XG5cbiAgICB2YXIgY29tcG9uZW50O1xuXG4gICAgaWYgKHdpbmRvdy5VSWtpdDIpIHtcbiAgICAgICAgY29tcG9uZW50ID0gYWRkb24oVUlraXQyKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGRlZmluZSA9PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICAgICAgZGVmaW5lKCd1aWtpdC1zZWFyY2gnLCBbJ3Vpa2l0J10sIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICByZXR1cm4gY29tcG9uZW50IHx8IGFkZG9uKFVJa2l0Mik7XG4gICAgICAgIH0pO1xuICAgIH1cblxufSkoZnVuY3Rpb24oVUkpe1xuXG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICBVSS5jb21wb25lbnQoJ3NlYXJjaCcsIHtcbiAgICAgICAgZGVmYXVsdHM6IHtcbiAgICAgICAgICAgIG1zZ1Jlc3VsdHNIZWFkZXIgICA6ICdTZWFyY2ggUmVzdWx0cycsXG4gICAgICAgICAgICBtc2dNb3JlUmVzdWx0cyAgICAgOiAnTW9yZSBSZXN1bHRzJyxcbiAgICAgICAgICAgIG1zZ05vUmVzdWx0cyAgICAgICA6ICdObyByZXN1bHRzIGZvdW5kJyxcbiAgICAgICAgICAgIHRlbXBsYXRlICAgICAgICAgICA6ICc8dWwgY2xhc3M9XCJ1ay1uYXYgdWstbmF2LXNlYXJjaCB1ay1hdXRvY29tcGxldGUtcmVzdWx0c1wiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I21zZ1Jlc3VsdHNIZWFkZXJ9fTxsaSBjbGFzcz1cInVrLW5hdi1oZWFkZXIgdWstc2tpcFwiPnt7bXNnUmVzdWx0c0hlYWRlcn19PC9saT57ey9tc2dSZXN1bHRzSGVhZGVyfX1cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyNpdGVtcyAmJiBpdGVtcy5sZW5ndGh9fVxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e35pdGVtc319XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLXVybD1cInt7ISRpdGVtLnVybH19XCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwie3shJGl0ZW0udXJsfX1cIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e3skaXRlbS50aXRsZX19fVxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IyRpdGVtLnRleHR9fTxkaXY+e3t7JGl0ZW0udGV4dH19fTwvZGl2Pnt7LyRpdGVtLnRleHR9fVxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ey9pdGVtc319XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I21zZ01vcmVSZXN1bHRzfX1cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cInVrLW5hdi1kaXZpZGVyIHVrLXNraXBcIj48L2xpPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwidWstc2VhcmNoLW1vcmVyZXN1bHRzXCIgZGF0YS1tb3JlcmVzdWx0cz1cInRydWVcIj48YSBocmVmPVwiI1wiIG9uY2xpY2s9XCJqUXVlcnkodGhpcykuY2xvc2VzdChcXCdmb3JtXFwnKS5zdWJtaXQoKTtcIj57e21zZ01vcmVSZXN1bHRzfX08L2E+PC9saT5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3svbXNnTW9yZVJlc3VsdHN9fVxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7L2VuZH19XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3teaXRlbXMubGVuZ3RofX1cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7I21zZ05vUmVzdWx0c319PGxpIGNsYXNzPVwidWstc2tpcFwiPjxhPnt7bXNnTm9SZXN1bHRzfX08L2E+PC9saT57ey9tc2dOb1Jlc3VsdHN9fVxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7L2VuZH19XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPicsXG5cbiAgICAgICAgICAgIHJlbmRlcmVyOiBmdW5jdGlvbihkYXRhKSB7XG5cbiAgICAgICAgICAgICAgICB2YXIgb3B0cyA9IHRoaXMub3B0aW9ucztcblxuICAgICAgICAgICAgICAgIHRoaXMuZHJvcGRvd24uYXBwZW5kKHRoaXMudGVtcGxhdGUoe2l0ZW1zOmRhdGEucmVzdWx0cyB8fCBbXSwgbXNnUmVzdWx0c0hlYWRlcjpvcHRzLm1zZ1Jlc3VsdHNIZWFkZXIsIG1zZ01vcmVSZXN1bHRzOiBvcHRzLm1zZ01vcmVSZXN1bHRzLCBtc2dOb1Jlc3VsdHM6IG9wdHMubXNnTm9SZXN1bHRzfSkpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2hvdygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGJvb3Q6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAvLyBpbml0IGNvZGVcbiAgICAgICAgICAgIFVJLiRodG1sLm9uKCdmb2N1cy5zZWFyY2gudWlraXQnLCAnW2RhdGEtdWstc2VhcmNoXScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgZWxlID1VSS4kKHRoaXMpO1xuXG4gICAgICAgICAgICAgICAgaWYgKCFlbGUuZGF0YSgnc2VhcmNoJykpIHtcbiAgICAgICAgICAgICAgICAgICAgVUkuc2VhcmNoKGVsZSwgVUkuVXRpbHMub3B0aW9ucyhlbGUuYXR0cignZGF0YS11ay1zZWFyY2gnKSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyICR0aGlzID0gdGhpcztcblxuICAgICAgICAgICAgdGhpcy5hdXRvY29tcGxldGUgPSBVSS5hdXRvY29tcGxldGUodGhpcy5lbGVtZW50LCB0aGlzLm9wdGlvbnMpO1xuXG4gICAgICAgICAgICB0aGlzLmF1dG9jb21wbGV0ZS5kcm9wZG93bi5hZGRDbGFzcygndWstZHJvcGRvd24tc2VhcmNoJyk7XG5cbiAgICAgICAgICAgIHRoaXMuYXV0b2NvbXBsZXRlLmlucHV0Lm9uKFwia2V5dXBcIiwgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAkdGhpcy5lbGVtZW50WyR0aGlzLmF1dG9jb21wbGV0ZS5pbnB1dC52YWwoKSA/ICdhZGRDbGFzcyc6J3JlbW92ZUNsYXNzJ10oJ3VrLWFjdGl2ZScpO1xuICAgICAgICAgICAgfSkuY2xvc2VzdChcImZvcm1cIikub24oXCJyZXNldFwiLCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICR0aGlzLnZhbHVlID0gJyc7XG4gICAgICAgICAgICAgICAgJHRoaXMuZWxlbWVudC5yZW1vdmVDbGFzcygndWstYWN0aXZlJyk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdGhpcy5vbignc2VsZWN0aXRlbS51ay5hdXRvY29tcGxldGUnLCBmdW5jdGlvbihlLCBkYXRhKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGEudXJsKSB7XG4gICAgICAgICAgICAgICAgICBsb2NhdGlvbi5ocmVmID0gZGF0YS51cmw7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmKGRhdGEubW9yZXJlc3VsdHMpIHtcbiAgICAgICAgICAgICAgICAgICR0aGlzLmF1dG9jb21wbGV0ZS5pbnB1dC5jbG9zZXN0KCdmb3JtJykuc3VibWl0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5kYXRhKCdzZWFyY2gnLCB0aGlzKTtcbiAgICAgICAgfVxuICAgIH0pO1xufSk7Il19
