!function(t){var e;window.UIkit2&&(e=t(UIkit2)),"function"==typeof define&&define.amd&&define("uikit-pagination",["uikit"],function(){return e||t(UIkit2)})}(function(a){"use strict";return a.component("pagination",{defaults:{items:1,itemsOnPage:1,pages:0,displayedPages:7,edges:1,currentPage:0,lblPrev:!1,lblNext:!1,onSelectPage:function(){}},boot:function(){a.ready(function(t){a.$("[data-uk-pagination]",t).each(function(){var t=a.$(this);t.data("pagination")||a.pagination(t,a.Utils.options(t.attr("data-uk-pagination")))})})},init:function(){var e=this;this.pages=this.options.pages?this.options.pages:Math.ceil(this.options.items/this.options.itemsOnPage)?Math.ceil(this.options.items/this.options.itemsOnPage):1,this.currentPage=this.options.currentPage,this.halfDisplayed=this.options.displayedPages/2,this.on("click","a[data-page]",function(t){t.preventDefault(),e.selectPage(a.$(this).data("page"))}),this._render()},_getInterval:function(){return{start:Math.ceil(this.currentPage>this.halfDisplayed?Math.max(Math.min(this.currentPage-this.halfDisplayed,this.pages-this.options.displayedPages),0):0),end:Math.ceil(this.currentPage>this.halfDisplayed?Math.min(this.currentPage+this.halfDisplayed,this.pages):Math.min(this.options.displayedPages,this.pages))}},render:function(t){this.pages=t||this.pages,this._render()},selectPage:function(t,e){this.currentPage=t,this.render(e),this.options.onSelectPage.apply(this,[t]),this.trigger("select.uk.pagination",[t,this])},_render:function(){var t,e=this.options,i=this._getInterval();if(this.element.empty(),e.lblPrev&&this._append(this.currentPage-1,{text:e.lblPrev}),0<i.start&&0<e.edges){var s=Math.min(e.edges,i.start);for(t=0;t<s;t++)this._append(t);e.edges<i.start&&i.start-e.edges!=1?this.element.append("<li><span>...</span></li>"):i.start-e.edges==1&&this._append(e.edges)}for(t=i.start;t<i.end;t++)this._append(t);if(i.end<this.pages&&0<e.edges)for(this.pages-e.edges>i.end&&this.pages-e.edges-i.end!=1?this.element.append("<li><span>...</span></li>"):this.pages-e.edges-i.end==1&&this._append(i.end++),t=Math.max(this.pages-e.edges,i.end);t<this.pages;t++)this._append(t);e.lblNext&&this._append(this.currentPage+1,{text:e.lblNext})},_append:function(t,e){var i,s;t=t<0?0:t<this.pages?t:this.pages-1,s=a.$.extend({text:t+1},e),i=t==this.currentPage?'<li class="uk-active"><span>'+s.text+"</span></li>":'<li><a href="#page-'+(t+1)+'" data-page="'+t+'">'+s.text+"</a></li>",this.element.append(i)}}),a.pagination});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
