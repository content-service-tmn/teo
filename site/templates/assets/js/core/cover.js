!function(i){"use strict";i.component("cover",{defaults:{automute:!0},boot:function(){i.ready(function(t){i.$("[data-uk-cover]",t).each(function(){var t=i.$(this);if(!t.data("cover"))i.cover(t,i.Utils.options(t.attr("data-uk-cover")))})})},init:function(){if(this.parent=this.element.parent(),i.$win.on("load resize orientationchange",i.Utils.debounce(function(){this.check()}.bind(this),100)),this.on("display.uk.check",function(t){this.element.is(":visible")&&this.check()}.bind(this)),this.check(),this.element.is("iframe")&&this.options.automute){var t=this.element.attr("src");this.element.attr("src","").on("load",function(){this.contentWindow.postMessage('{ "event": "command", "func": "mute", "method":"setVolume", "value":0}',"*")}).attr("src",[t,-1<t.indexOf("?")?"&":"?","enablejsapi=1&api=1"].join(""))}},check:function(){this.element.css({width:"",height:""}),this.dimension={w:this.element.width(),h:this.element.height()},this.element.attr("width")&&!isNaN(this.element.attr("width"))&&(this.dimension.w=this.element.attr("width")),this.element.attr("height")&&!isNaN(this.element.attr("height"))&&(this.dimension.h=this.element.attr("height")),this.ratio=this.dimension.w/this.dimension.h;var t,i,e=this.parent.width(),n=this.parent.height();e/this.ratio<n?(t=Math.ceil(n*this.ratio),i=n):(t=e,i=Math.ceil(e/this.ratio)),this.element.css({width:t,height:i})}})}(UIkit2);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvY292ZXIuanMiXSwibmFtZXMiOlsiVUkiLCJjb21wb25lbnQiLCJkZWZhdWx0cyIsImF1dG9tdXRlIiwiYm9vdCIsInJlYWR5IiwiY29udGV4dCIsIiQiLCJlYWNoIiwiZWxlIiwidGhpcyIsImRhdGEiLCJjb3ZlciIsIlV0aWxzIiwib3B0aW9ucyIsImF0dHIiLCJpbml0IiwicGFyZW50IiwiZWxlbWVudCIsIiR3aW4iLCJvbiIsImRlYm91bmNlIiwiY2hlY2siLCJiaW5kIiwiZSIsImlzIiwic3JjIiwiY29udGVudFdpbmRvdyIsInBvc3RNZXNzYWdlIiwiaW5kZXhPZiIsImpvaW4iLCJjc3MiLCJ3aWR0aCIsImhlaWdodCIsImRpbWVuc2lvbiIsInciLCJoIiwiaXNOYU4iLCJyYXRpbyIsIk1hdGgiLCJjZWlsIiwiVUlraXQyIl0sIm1hcHBpbmdzIjoiQ0FDQSxTQUFVQSxHQUVOLGFBRUFBLEVBQUdDLFVBQVUsUUFBUyxDQUVsQkMsU0FBVSxDQUNOQyxVQUFXLEdBR2ZDLEtBQU0sV0FHRkosRUFBR0ssTUFBTSxTQUFTQyxHQUVkTixFQUFHTyxFQUFFLGtCQUFtQkQsR0FBU0UsS0FBSyxXQUVsQyxJQUFJQyxFQUFNVCxFQUFHTyxFQUFFRyxNQUVmLElBQUlELEVBQUlFLEtBQUssU0FDSVgsRUFBR1ksTUFBTUgsRUFBS1QsRUFBR2EsTUFBTUMsUUFBUUwsRUFBSU0sS0FBSyx3QkFNckVDLEtBQU0sV0FjRixHQVpBTixLQUFLTyxPQUFTUCxLQUFLUSxRQUFRRCxTQUUzQmpCLEVBQUdtQixLQUFLQyxHQUFHLGdDQUFpQ3BCLEVBQUdhLE1BQU1RLFNBQVMsV0FDMURYLEtBQUtZLFNBQ1BDLEtBQUtiLE1BQU8sTUFFZEEsS0FBS1UsR0FBRyxtQkFBb0IsU0FBU0ksR0FDN0JkLEtBQUtRLFFBQVFPLEdBQUcsYUFBYWYsS0FBS1ksU0FDeENDLEtBQUtiLE9BRVBBLEtBQUtZLFFBRURaLEtBQUtRLFFBQVFPLEdBQUcsV0FBYWYsS0FBS0ksUUFBUVgsU0FBVSxDQUVwRCxJQUFJdUIsRUFBTWhCLEtBQUtRLFFBQVFILEtBQUssT0FFNUJMLEtBQUtRLFFBQVFILEtBQUssTUFBTyxJQUFJSyxHQUFHLE9BQVEsV0FDcENWLEtBQUtpQixjQUFjQyxZQUFZLHlFQUEwRSxPQUMxR2IsS0FBSyxNQUFPLENBQUNXLEdBQTBCLEVBQXBCQSxFQUFJRyxRQUFRLEtBQVksSUFBSSxJQUFNLHVCQUF1QkMsS0FBSyxPQUk1RlIsTUFBTyxXQUVIWixLQUFLUSxRQUFRYSxJQUFJLENBQUVDLE1BQVMsR0FBSUMsT0FBUyxLQUV6Q3ZCLEtBQUt3QixVQUFZLENBQUNDLEVBQUd6QixLQUFLUSxRQUFRYyxRQUFTSSxFQUFHMUIsS0FBS1EsUUFBUWUsVUFFdkR2QixLQUFLUSxRQUFRSCxLQUFLLFdBQWFzQixNQUFNM0IsS0FBS1EsUUFBUUgsS0FBSyxZQUN2REwsS0FBS3dCLFVBQVVDLEVBQUl6QixLQUFLUSxRQUFRSCxLQUFLLFVBR3JDTCxLQUFLUSxRQUFRSCxLQUFLLFlBQWNzQixNQUFNM0IsS0FBS1EsUUFBUUgsS0FBSyxhQUN4REwsS0FBS3dCLFVBQVVFLEVBQUkxQixLQUFLUSxRQUFRSCxLQUFLLFdBR3pDTCxLQUFLNEIsTUFBUTVCLEtBQUt3QixVQUFVQyxFQUFJekIsS0FBS3dCLFVBQVVFLEVBRS9DLElBQXVESixFQUFPQyxFQUExREUsRUFBSXpCLEtBQUtPLE9BQU9lLFFBQVNJLEVBQUkxQixLQUFLTyxPQUFPZ0IsU0FHeENFLEVBQUl6QixLQUFLNEIsTUFBU0YsR0FFbkJKLEVBQVNPLEtBQUtDLEtBQUtKLEVBQUkxQixLQUFLNEIsT0FDNUJMLEVBQVNHLElBS1RKLEVBQVNHLEVBQ1RGLEVBQVNNLEtBQUtDLEtBQUtMLEVBQUl6QixLQUFLNEIsUUFHaEM1QixLQUFLUSxRQUFRYSxJQUFJLENBQUVDLE1BQVNBLEVBQU9DLE9BQVNBLE9BakZ4RCxDQXFGR1EiLCJmaWxlIjoiY29yZS9jb3Zlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBVSWtpdCAyLjI3LjIgfCBodHRwOi8vd3d3LmdldHVpa2l0LmNvbSB8IChjKSAyMDE0IFlPT3RoZW1lIHwgTUlUIExpY2Vuc2UgKi9cclxuKGZ1bmN0aW9uKFVJKXtcclxuXHJcbiAgICBcInVzZSBzdHJpY3RcIjtcclxuXHJcbiAgICBVSS5jb21wb25lbnQoJ2NvdmVyJywge1xyXG5cclxuICAgICAgICBkZWZhdWx0czoge1xyXG4gICAgICAgICAgICBhdXRvbXV0ZSA6IHRydWVcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBib290OiBmdW5jdGlvbigpIHtcclxuXHJcbiAgICAgICAgICAgIC8vIGF1dG8gaW5pdFxyXG4gICAgICAgICAgICBVSS5yZWFkeShmdW5jdGlvbihjb250ZXh0KSB7XHJcblxyXG4gICAgICAgICAgICAgICAgVUkuJCgnW2RhdGEtdWstY292ZXJdJywgY29udGV4dCkuZWFjaChmdW5jdGlvbigpe1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB2YXIgZWxlID0gVUkuJCh0aGlzKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYoIWVsZS5kYXRhKCdjb3ZlcicpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwbHVnaW4gPSBVSS5jb3ZlcihlbGUsIFVJLlV0aWxzLm9wdGlvbnMoZWxlLmF0dHIoJ2RhdGEtdWstY292ZXInKSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcclxuXHJcbiAgICAgICAgICAgIHRoaXMucGFyZW50ID0gdGhpcy5lbGVtZW50LnBhcmVudCgpO1xyXG5cclxuICAgICAgICAgICAgVUkuJHdpbi5vbignbG9hZCByZXNpemUgb3JpZW50YXRpb25jaGFuZ2UnLCBVSS5VdGlscy5kZWJvdW5jZShmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jaGVjaygpO1xyXG4gICAgICAgICAgICB9LmJpbmQodGhpcyksIDEwMCkpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5vbignZGlzcGxheS51ay5jaGVjaycsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmVsZW1lbnQuaXMoJzp2aXNpYmxlJykpIHRoaXMuY2hlY2soKTtcclxuICAgICAgICAgICAgfS5iaW5kKHRoaXMpKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuY2hlY2soKTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmVsZW1lbnQuaXMoJ2lmcmFtZScpICYmIHRoaXMub3B0aW9ucy5hdXRvbXV0ZSkge1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBzcmMgPSB0aGlzLmVsZW1lbnQuYXR0cignc3JjJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50LmF0dHIoJ3NyYycsICcnKS5vbignbG9hZCcsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZW50V2luZG93LnBvc3RNZXNzYWdlKCd7IFwiZXZlbnRcIjogXCJjb21tYW5kXCIsIFwiZnVuY1wiOiBcIm11dGVcIiwgXCJtZXRob2RcIjpcInNldFZvbHVtZVwiLCBcInZhbHVlXCI6MH0nLCAnKicpO1xyXG4gICAgICAgICAgICAgICAgfSkuYXR0cignc3JjJywgW3NyYywgKHNyYy5pbmRleE9mKCc/JykgPiAtMSA/ICcmJzonPycpLCAnZW5hYmxlanNhcGk9MSZhcGk9MSddLmpvaW4oJycpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIGNoZWNrOiBmdW5jdGlvbigpIHtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5jc3MoeyB3aWR0aCAgOiAnJywgaGVpZ2h0IDogJycgfSk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmRpbWVuc2lvbiA9IHt3OiB0aGlzLmVsZW1lbnQud2lkdGgoKSwgaDogdGhpcy5lbGVtZW50LmhlaWdodCgpfTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmVsZW1lbnQuYXR0cignd2lkdGgnKSAmJiAhaXNOYU4odGhpcy5lbGVtZW50LmF0dHIoJ3dpZHRoJykpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRpbWVuc2lvbi53ID0gdGhpcy5lbGVtZW50LmF0dHIoJ3dpZHRoJyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmVsZW1lbnQuYXR0cignaGVpZ2h0JykgJiYgIWlzTmFOKHRoaXMuZWxlbWVudC5hdHRyKCdoZWlnaHQnKSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGltZW5zaW9uLmggPSB0aGlzLmVsZW1lbnQuYXR0cignaGVpZ2h0Jyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMucmF0aW8gPSB0aGlzLmRpbWVuc2lvbi53IC8gdGhpcy5kaW1lbnNpb24uaDtcclxuXHJcbiAgICAgICAgICAgIHZhciB3ID0gdGhpcy5wYXJlbnQud2lkdGgoKSwgaCA9IHRoaXMucGFyZW50LmhlaWdodCgpLCB3aWR0aCwgaGVpZ2h0O1xyXG5cclxuICAgICAgICAgICAgLy8gaWYgZWxlbWVudCBoZWlnaHQgPCBwYXJlbnQgaGVpZ2h0IChnYXAgdW5kZXJuZWF0aClcclxuICAgICAgICAgICAgaWYgKCh3IC8gdGhpcy5yYXRpbykgPCBoKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgd2lkdGggID0gTWF0aC5jZWlsKGggKiB0aGlzLnJhdGlvKTtcclxuICAgICAgICAgICAgICAgIGhlaWdodCA9IGg7XHJcblxyXG4gICAgICAgICAgICAvLyBlbGVtZW50IHdpZHRoIDwgcGFyZW50IHdpZHRoIChnYXAgdG8gcmlnaHQpXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgICAgICAgICAgd2lkdGggID0gdztcclxuICAgICAgICAgICAgICAgIGhlaWdodCA9IE1hdGguY2VpbCh3IC8gdGhpcy5yYXRpbyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5jc3MoeyB3aWR0aCAgOiB3aWR0aCwgaGVpZ2h0IDogaGVpZ2h0IH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxufSkoVUlraXQyKTsiXX0=
