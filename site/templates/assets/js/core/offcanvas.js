!function(r){"use strict";var f={x:window.scrollX,y:window.scrollY},c=(r.$win,r.$doc,r.$html),o={show:function(a,t){if((a=r.$(a)).length){t=r.$.extend({mode:"push"},t);var n=r.$("body"),i=a.find(".uk-offcanvas-bar:first"),o="right"==r.langdirection,e=(i.hasClass("uk-offcanvas-bar-flip")?-1:1)*(o?-1:1),s=window.innerWidth-n.width();f={x:window.pageXOffset,y:window.pageYOffset},i.attr("mode",t.mode),a.addClass("uk-active"),n.css({width:window.innerWidth-s,height:window.innerHeight}).addClass("uk-offcanvas-page"),"push"!=t.mode&&"reveal"!=t.mode||n.css(o?"margin-right":"margin-left",(o?-1:1)*(i.outerWidth()*e)),"reveal"==t.mode&&i.css("clip","rect(0, "+i.outerWidth()+"px, 100vh, 0)"),c.css("margin-top",-1*f.y).width(),i.addClass("uk-offcanvas-bar-show"),this._initElement(a),i.trigger("show.uk.offcanvas",[a,i]),a.attr("aria-hidden","false")}},hide:function(a){var t=r.$("body"),n=r.$(".uk-offcanvas.uk-active"),i="right"==r.langdirection,o=n.find(".uk-offcanvas-bar:first"),e=function(){t.removeClass("uk-offcanvas-page").css({width:"",height:"",marginLeft:"",marginRight:""}),n.removeClass("uk-active"),o.removeClass("uk-offcanvas-bar-show"),c.css("margin-top",""),window.scrollTo(f.x,f.y),o.trigger("hide.uk.offcanvas",[n,o]),n.attr("aria-hidden","true")};n.length&&("none"==o.attr("mode")&&(a=!0),r.support.transition&&!a?(t.one(r.support.transition.end,function(){e()}).css(i?"margin-right":"margin-left",""),"reveal"==o.attr("mode")&&o.css("clip",""),setTimeout(function(){o.removeClass("uk-offcanvas-bar-show")},0)):e())},_initElement:function(a){a.data("OffcanvasInit")||(a.on("click.uk.offcanvas swipeRight.uk.offcanvas swipeLeft.uk.offcanvas",function(a){var t=r.$(a.target);if(!a.type.match(/swipe/)&&!t.hasClass("uk-offcanvas-close")){if(t.hasClass("uk-offcanvas-bar"))return;if(t.parents(".uk-offcanvas-bar:first").length)return}a.stopImmediatePropagation(),o.hide()}),a.on("click",'a[href*="#"]',function(a){var n=r.$(this),i=n.attr("href");"#"!=i&&(r.$doc.one("hide.uk.offcanvas",function(){var t;try{t=r.$(n[0].hash)}catch(a){t=""}t.length||(t=r.$('[name="'+n[0].hash.replace("#","")+'"]')),t.length&&r.Utils.scrollToElement?r.Utils.scrollToElement(t,r.Utils.options(n.attr("data-uk-smooth-scroll")||"{}")):window.location.href=i}),o.hide())}),a.data("OffcanvasInit",!0))}};r.component("offcanvasTrigger",{boot:function(){c.on("click.offcanvas.uikit","[data-uk-offcanvas]",function(a){a.preventDefault();var t=r.$(this);if(!t.data("offcanvasTrigger")){r.offcanvasTrigger(t,r.Utils.options(t.attr("data-uk-offcanvas")));t.trigger("click")}}),c.on("keydown.uk.offcanvas",function(a){27===a.keyCode&&o.hide()})},init:function(){var t=this;this.options=r.$.extend({target:!!t.element.is("a")&&t.element.attr("href"),mode:"push"},this.options),this.on("click",function(a){a.preventDefault(),o.show(t.options.target,t.options)})}}),r.offcanvas=o}(UIkit2);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvb2ZmY2FudmFzLmpzIl0sIm5hbWVzIjpbIlVJIiwic2Nyb2xscG9zIiwieCIsIndpbmRvdyIsInNjcm9sbFgiLCJ5Iiwic2Nyb2xsWSIsIiRodG1sIiwiJHdpbiIsIiRkb2MiLCJPZmZjYW52YXMiLCJzaG93IiwiZWxlbWVudCIsIm9wdGlvbnMiLCIkIiwibGVuZ3RoIiwiZXh0ZW5kIiwibW9kZSIsIiRib2R5IiwiYmFyIiwiZmluZCIsInJ0bCIsImxhbmdkaXJlY3Rpb24iLCJkaXIiLCJoYXNDbGFzcyIsInNjcm9sbGJhcndpZHRoIiwiaW5uZXJXaWR0aCIsIndpZHRoIiwicGFnZVhPZmZzZXQiLCJwYWdlWU9mZnNldCIsImF0dHIiLCJhZGRDbGFzcyIsImNzcyIsImhlaWdodCIsImlubmVySGVpZ2h0Iiwib3V0ZXJXaWR0aCIsInRoaXMiLCJfaW5pdEVsZW1lbnQiLCJ0cmlnZ2VyIiwiaGlkZSIsImZvcmNlIiwicGFuZWwiLCJmaW5hbGl6ZSIsInJlbW92ZUNsYXNzIiwibWFyZ2luTGVmdCIsIm1hcmdpblJpZ2h0Iiwic2Nyb2xsVG8iLCJzdXBwb3J0IiwidHJhbnNpdGlvbiIsIm9uZSIsImVuZCIsInNldFRpbWVvdXQiLCJkYXRhIiwib24iLCJlIiwidGFyZ2V0IiwidHlwZSIsIm1hdGNoIiwicGFyZW50cyIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsImxpbmsiLCJocmVmIiwiaGFzaCIsInJlcGxhY2UiLCJVdGlscyIsInNjcm9sbFRvRWxlbWVudCIsImxvY2F0aW9uIiwiY29tcG9uZW50IiwiYm9vdCIsInByZXZlbnREZWZhdWx0IiwiZWxlIiwib2ZmY2FudmFzVHJpZ2dlciIsImtleUNvZGUiLCJpbml0IiwiJHRoaXMiLCJpcyIsIm9mZmNhbnZhcyIsIlVJa2l0MiJdLCJtYXBwaW5ncyI6IkNBQ0EsU0FBVUEsR0FFTixhQUVBLElBQUlDLEVBQVksQ0FBQ0MsRUFBR0MsT0FBT0MsUUFBU0MsRUFBR0YsT0FBT0csU0FHMUNDLEdBRllQ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RCxRQUFRMEMsT0FBUW1CLEVBQU03RCxjQUt2RGIsRUFBRzRFLFVBQVlsRSxFQWpNbkIsQ0FtTUdtRSIsImZpbGUiOiJjb3JlL29mZmNhbnZhcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBVSWtpdCAyLjI3LjIgfCBodHRwOi8vd3d3LmdldHVpa2l0LmNvbSB8IChjKSAyMDE0IFlPT3RoZW1lIHwgTUlUIExpY2Vuc2UgKi9cbihmdW5jdGlvbihVSSkge1xuXG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICB2YXIgc2Nyb2xscG9zID0ge3g6IHdpbmRvdy5zY3JvbGxYLCB5OiB3aW5kb3cuc2Nyb2xsWX0sXG4gICAgICAgICR3aW4gICAgICA9IFVJLiR3aW4sXG4gICAgICAgICRkb2MgICAgICA9IFVJLiRkb2MsXG4gICAgICAgICRodG1sICAgICA9IFVJLiRodG1sLFxuICAgICAgICBPZmZjYW52YXMgPSB7XG5cbiAgICAgICAgc2hvdzogZnVuY3Rpb24oZWxlbWVudCwgb3B0aW9ucykge1xuXG4gICAgICAgICAgICBlbGVtZW50ID0gVUkuJChlbGVtZW50KTtcblxuICAgICAgICAgICAgaWYgKCFlbGVtZW50Lmxlbmd0aCkgcmV0dXJuO1xuXG4gICAgICAgICAgICBvcHRpb25zID0gVUkuJC5leHRlbmQoe21vZGU6ICdwdXNoJ30sIG9wdGlvbnMpO1xuXG4gICAgICAgICAgICB2YXIgJGJvZHkgICAgID0gVUkuJCgnYm9keScpLFxuICAgICAgICAgICAgICAgIGJhciAgICAgICA9IGVsZW1lbnQuZmluZCgnLnVrLW9mZmNhbnZhcy1iYXI6Zmlyc3QnKSxcbiAgICAgICAgICAgICAgICBydGwgICAgICAgPSAoVUkubGFuZ2RpcmVjdGlvbiA9PSAncmlnaHQnKSxcbiAgICAgICAgICAgICAgICBmbGlwICAgICAgPSBiYXIuaGFzQ2xhc3MoJ3VrLW9mZmNhbnZhcy1iYXItZmxpcCcpID8gLTE6MSxcbiAgICAgICAgICAgICAgICBkaXIgICAgICAgPSBmbGlwICogKHJ0bCA/IC0xIDogMSksXG5cbiAgICAgICAgICAgICAgICBzY3JvbGxiYXJ3aWR0aCA9ICB3aW5kb3cuaW5uZXJXaWR0aCAtICRib2R5LndpZHRoKCk7XG5cbiAgICAgICAgICAgIHNjcm9sbHBvcyA9IHt4OiB3aW5kb3cucGFnZVhPZmZzZXQsIHk6IHdpbmRvdy5wYWdlWU9mZnNldH07XG5cbiAgICAgICAgICAgIGJhci5hdHRyKCdtb2RlJywgb3B0aW9ucy5tb2RlKTtcbiAgICAgICAgICAgIGVsZW1lbnQuYWRkQ2xhc3MoJ3VrLWFjdGl2ZScpO1xuXG4gICAgICAgICAgICAkYm9keS5jc3Moe3dpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCAtIHNjcm9sbGJhcndpZHRoLCBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodH0pLmFkZENsYXNzKCd1ay1vZmZjYW52YXMtcGFnZScpO1xuXG4gICAgICAgICAgICBpZiAob3B0aW9ucy5tb2RlID09ICdwdXNoJyB8fCBvcHRpb25zLm1vZGUgPT0gJ3JldmVhbCcpIHtcbiAgICAgICAgICAgICAgICAkYm9keS5jc3MoKHJ0bCA/ICdtYXJnaW4tcmlnaHQnIDogJ21hcmdpbi1sZWZ0JyksIChydGwgPyAtMSA6IDEpICogKGJhci5vdXRlcldpZHRoKCkgKiBkaXIpKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKG9wdGlvbnMubW9kZSA9PSAncmV2ZWFsJykge1xuICAgICAgICAgICAgICAgIGJhci5jc3MoJ2NsaXAnLCAncmVjdCgwLCAnK2Jhci5vdXRlcldpZHRoKCkrJ3B4LCAxMDB2aCwgMCknKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJGh0bWwuY3NzKCdtYXJnaW4tdG9wJywgc2Nyb2xscG9zLnkgKiAtMSkud2lkdGgoKTsgLy8gLndpZHRoKCkgLSBmb3JjZSByZWRyYXdcblxuXG4gICAgICAgICAgICBiYXIuYWRkQ2xhc3MoJ3VrLW9mZmNhbnZhcy1iYXItc2hvdycpO1xuXG4gICAgICAgICAgICB0aGlzLl9pbml0RWxlbWVudChlbGVtZW50KTtcblxuICAgICAgICAgICAgYmFyLnRyaWdnZXIoJ3Nob3cudWsub2ZmY2FudmFzJywgW2VsZW1lbnQsIGJhcl0pO1xuXG4gICAgICAgICAgICAvLyBVcGRhdGUgQVJJQVxuICAgICAgICAgICAgZWxlbWVudC5hdHRyKCdhcmlhLWhpZGRlbicsICdmYWxzZScpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGhpZGU6IGZ1bmN0aW9uKGZvcmNlKSB7XG5cbiAgICAgICAgICAgIHZhciAkYm9keSA9IFVJLiQoJ2JvZHknKSxcbiAgICAgICAgICAgICAgICBwYW5lbCA9IFVJLiQoJy51ay1vZmZjYW52YXMudWstYWN0aXZlJyksXG4gICAgICAgICAgICAgICAgcnRsICAgPSAoVUkubGFuZ2RpcmVjdGlvbiA9PSAncmlnaHQnKSxcbiAgICAgICAgICAgICAgICBiYXIgICA9IHBhbmVsLmZpbmQoJy51ay1vZmZjYW52YXMtYmFyOmZpcnN0JyksXG4gICAgICAgICAgICAgICAgZmluYWxpemUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgJGJvZHkucmVtb3ZlQ2xhc3MoJ3VrLW9mZmNhbnZhcy1wYWdlJykuY3NzKHt3aWR0aDogJycsIGhlaWdodDogJycsIG1hcmdpbkxlZnQ6ICcnLCBtYXJnaW5SaWdodDogJyd9KTtcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwucmVtb3ZlQ2xhc3MoJ3VrLWFjdGl2ZScpO1xuXG4gICAgICAgICAgICAgICAgICAgIGJhci5yZW1vdmVDbGFzcygndWstb2ZmY2FudmFzLWJhci1zaG93Jyk7XG4gICAgICAgICAgICAgICAgICAgICRodG1sLmNzcygnbWFyZ2luLXRvcCcsICcnKTtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnNjcm9sbFRvKHNjcm9sbHBvcy54LCBzY3JvbGxwb3MueSk7XG4gICAgICAgICAgICAgICAgICAgIGJhci50cmlnZ2VyKCdoaWRlLnVrLm9mZmNhbnZhcycsIFtwYW5lbCwgYmFyXSk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gVXBkYXRlIEFSSUFcbiAgICAgICAgICAgICAgICAgICAgcGFuZWwuYXR0cignYXJpYS1oaWRkZW4nLCAndHJ1ZScpO1xuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGlmICghcGFuZWwubGVuZ3RoKSByZXR1cm47XG4gICAgICAgICAgICBpZiAoYmFyLmF0dHIoJ21vZGUnKSA9PSAnbm9uZScpIGZvcmNlID0gdHJ1ZTtcblxuICAgICAgICAgICAgaWYgKFVJLnN1cHBvcnQudHJhbnNpdGlvbiAmJiAhZm9yY2UpIHtcblxuICAgICAgICAgICAgICAgICRib2R5Lm9uZShVSS5zdXBwb3J0LnRyYW5zaXRpb24uZW5kLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgZmluYWxpemUoKTtcbiAgICAgICAgICAgICAgICB9KS5jc3MoKHJ0bCA/ICdtYXJnaW4tcmlnaHQnIDogJ21hcmdpbi1sZWZ0JyksICcnKTtcblxuICAgICAgICAgICAgICAgIGlmIChiYXIuYXR0cignbW9kZScpID09ICdyZXZlYWwnKSB7XG4gICAgICAgICAgICAgICAgICAgIGJhci5jc3MoJ2NsaXAnLCAnJyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICBiYXIucmVtb3ZlQ2xhc3MoJ3VrLW9mZmNhbnZhcy1iYXItc2hvdycpO1xuICAgICAgICAgICAgICAgIH0sIDApO1xuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGZpbmFsaXplKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgX2luaXRFbGVtZW50OiBmdW5jdGlvbihlbGVtZW50KSB7XG5cbiAgICAgICAgICAgIGlmIChlbGVtZW50LmRhdGEoJ09mZmNhbnZhc0luaXQnKSkgcmV0dXJuO1xuXG4gICAgICAgICAgICBlbGVtZW50Lm9uKCdjbGljay51ay5vZmZjYW52YXMgc3dpcGVSaWdodC51ay5vZmZjYW52YXMgc3dpcGVMZWZ0LnVrLm9mZmNhbnZhcycsIGZ1bmN0aW9uKGUpIHtcblxuICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSBVSS4kKGUudGFyZ2V0KTtcblxuICAgICAgICAgICAgICAgIGlmICghZS50eXBlLm1hdGNoKC9zd2lwZS8pKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0YXJnZXQuaGFzQ2xhc3MoJ3VrLW9mZmNhbnZhcy1jbG9zZScpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFyZ2V0Lmhhc0NsYXNzKCd1ay1vZmZjYW52YXMtYmFyJykpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YXJnZXQucGFyZW50cygnLnVrLW9mZmNhbnZhcy1iYXI6Zmlyc3QnKS5sZW5ndGgpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgT2ZmY2FudmFzLmhpZGUoKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBlbGVtZW50Lm9uKCdjbGljaycsICdhW2hyZWYqPVwiI1wiXScsIGZ1bmN0aW9uKGUpe1xuXG4gICAgICAgICAgICAgICAgdmFyIGxpbmsgPSBVSS4kKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICBocmVmID0gbGluay5hdHRyKCdocmVmJyk7XG5cbiAgICAgICAgICAgICAgICBpZiAoaHJlZiA9PSAnIycpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIFVJLiRkb2Mub25lKCdoaWRlLnVrLm9mZmNhbnZhcycsIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciB0YXJnZXQ7XG5cbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldCA9IFVJLiQobGlua1swXS5oYXNoKTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSl7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmICghdGFyZ2V0Lmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0ID0gVUkuJCgnW25hbWU9XCInK2xpbmtbMF0uaGFzaC5yZXBsYWNlKCcjJywnJykrJ1wiXScpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRhcmdldC5sZW5ndGggJiYgVUkuVXRpbHMuc2Nyb2xsVG9FbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBVSS5VdGlscy5zY3JvbGxUb0VsZW1lbnQodGFyZ2V0LCBVSS5VdGlscy5vcHRpb25zKGxpbmsuYXR0cignZGF0YS11ay1zbW9vdGgtc2Nyb2xsJykgfHwgJ3t9JykpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBPZmZjYW52YXMuaGlkZSgpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGVsZW1lbnQuZGF0YSgnT2ZmY2FudmFzSW5pdCcsIHRydWUpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIFVJLmNvbXBvbmVudCgnb2ZmY2FudmFzVHJpZ2dlcicsIHtcblxuICAgICAgICBib290OiBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgLy8gaW5pdCBjb2RlXG4gICAgICAgICAgICAkaHRtbC5vbignY2xpY2sub2ZmY2FudmFzLnVpa2l0JywgJ1tkYXRhLXVrLW9mZmNhbnZhc10nLCBmdW5jdGlvbihlKSB7XG5cbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgICAgICB2YXIgZWxlID0gVUkuJCh0aGlzKTtcblxuICAgICAgICAgICAgICAgIGlmICghZWxlLmRhdGEoJ29mZmNhbnZhc1RyaWdnZXInKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgb2JqID0gVUkub2ZmY2FudmFzVHJpZ2dlcihlbGUsIFVJLlV0aWxzLm9wdGlvbnMoZWxlLmF0dHIoJ2RhdGEtdWstb2ZmY2FudmFzJykpKTtcbiAgICAgICAgICAgICAgICAgICAgZWxlLnRyaWdnZXIoXCJjbGlja1wiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgJGh0bWwub24oJ2tleWRvd24udWsub2ZmY2FudmFzJywgZnVuY3Rpb24oZSkge1xuXG4gICAgICAgICAgICAgICAgaWYgKGUua2V5Q29kZSA9PT0gMjcpIHsgLy8gRVNDXG4gICAgICAgICAgICAgICAgICAgIE9mZmNhbnZhcy5oaWRlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgaW5pdDogZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAgIHZhciAkdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgICAgIHRoaXMub3B0aW9ucyA9IFVJLiQuZXh0ZW5kKHtcbiAgICAgICAgICAgICAgICB0YXJnZXQ6ICR0aGlzLmVsZW1lbnQuaXMoJ2EnKSA/ICR0aGlzLmVsZW1lbnQuYXR0cignaHJlZicpIDogZmFsc2UsXG4gICAgICAgICAgICAgICAgbW9kZTogJ3B1c2gnXG4gICAgICAgICAgICB9LCB0aGlzLm9wdGlvbnMpO1xuXG4gICAgICAgICAgICB0aGlzLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgT2ZmY2FudmFzLnNob3coJHRoaXMub3B0aW9ucy50YXJnZXQsICR0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIFVJLm9mZmNhbnZhcyA9IE9mZmNhbnZhcztcblxufSkoVUlraXQyKTsiXX0=
